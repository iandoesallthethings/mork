!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/e852ee0e/
Alt_L	sysefl.c	/^static int Alt_L = 0;$/;"	v	typeref:typename:int	file:
Alt_R	sysefl.c	/^static int Alt_R = 0;$/;"	v	typeref:typename:int	file:
AppName	launchefl.c	/^static const char * AppName = "Gargoyle " VERSION;$/;"	v	typeref:typename:const char *	file:
AppName	launcheoi.c	/^static const char * AppName = "Gargoyle " VERSION;$/;"	v	typeref:typename:const char *	file:
AppName	launchgtk.c	/^static const char * AppName = "Gargoyle " VERSION;$/;"	v	typeref:typename:const char *	file:
AppName	launchwin.c	/^static const char * AppName = "Gargoyle " VERSION;$/;"	v	typeref:typename:const char *	file:
BUSY	sndsdl.c	/^static const int BUSY = 2;$/;"	v	typeref:typename:const int	file:
CASE_IDENT	cgunicod.c	/^#define CASE_IDENT /;"	d	file:
CASE_LOWER	cgunicod.c	/^#define CASE_LOWER /;"	d	file:
CASE_TITLE	cgunicod.c	/^#define CASE_TITLE /;"	d	file:
CASE_UPPER	cgunicod.c	/^#define CASE_UPPER /;"	d	file:
CLIPBOARD	sysefl.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	e	enum:clipsource	file:
CLIPBOARD	syseoi.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	e	enum:clipsource	file:
CLIPBOARD	sysgtk.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	e	enum:clipsource	file:
COLS	window.c	/^#define COLS /;"	d	file:
COND_ALL	cgunicod.c	/^#define COND_ALL /;"	d	file:
COND_LINESTART	cgunicod.c	/^#define COND_LINESTART /;"	d	file:
Control_L	sysefl.c	/^static int Control_L = 0;$/;"	v	typeref:typename:int	file:
Control_R	sysefl.c	/^static int Control_R = 0;$/;"	v	typeref:typename:int	file:
DirSeparator	launchefl.c	/^static const char * DirSeparator = "\/";$/;"	v	typeref:typename:const char *	file:
DirSeparator	launcheoi.c	/^static const char * DirSeparator = "\/";$/;"	v	typeref:typename:const char *	file:
DirSeparator	launchgtk.c	/^static const char * DirSeparator = "\/";$/;"	v	typeref:typename:const char *	file:
DirSeparator	launchwin.c	/^static const char * DirSeparator = "\\\\";$/;"	v	typeref:typename:const char *	file:
FADE_GRANULARITY	sndsdl.c	/^#define FADE_GRANULARITY /;"	d	file:
FALSE	gi_blorb.c	/^#define FALSE /;"	d	file:
FILTER	launchgtk.c	/^#define FILTER(/;"	d	file:
FONT_SUBKEY	fontwin.c	/^#define FONT_SUBKEY /;"	d	file:
FREE	sndsdl.c	/^static const int FREE = 1;$/;"	v	typeref:typename:const int	file:
GET_CASE_BLOCK	cgunigen.c	/^#define GET_CASE_BLOCK(/;"	d	file:
GET_CASE_SPECIAL	cgunigen.c	/^#define GET_CASE_SPECIAL(/;"	d	file:
GET_DECOMP_BLOCK	cgunigen.c	/^#define GET_DECOMP_BLOCK(/;"	d	file:
GET_DECOMP_SPECIAL	cgunigen.c	/^#define GET_DECOMP_SPECIAL(/;"	d	file:
GLK_MAXVOLUME	sndsdl.c	/^#define GLK_MAXVOLUME /;"	d	file:
HALFSCALE	imgscale.c	/^#define HALFSCALE /;"	d	file:
ID_ABOUT	syswin.c	/^#define ID_ABOUT /;"	d	file:
ID_CONFIG	syswin.c	/^#define ID_CONFIG /;"	d	file:
ID_FULLSCREEN	syswin.c	/^#define ID_FULLSCREEN /;"	d	file:
ID_GLUL	launcher.c	/^#define ID_GLUL /;"	d	file:
ID_TOGSCR	syswin.c	/^#define ID_TOGSCR /;"	d	file:
ID_ZCOD	launcher.c	/^#define ID_ZCOD /;"	d	file:
LINES	window.c	/^#define LINES /;"	d	file:
LaunchingTemplate	launchefl.c	/^static const char * LaunchingTemplate = "%s\/%s";$/;"	v	typeref:typename:const char *	file:
LaunchingTemplate	launcheoi.c	/^static const char * LaunchingTemplate = "%s\/%s";$/;"	v	typeref:typename:const char *	file:
LaunchingTemplate	launchgtk.c	/^static const char * LaunchingTemplate = "%s\/%s";$/;"	v	typeref:typename:const char *	file:
LaunchingTemplate	launchwin.c	/^static const char * LaunchingTemplate = "\\"%s\\\\%s.exe\\" %s \\"%s\\"";$/;"	v	typeref:typename:const char *	file:
MAX	wintext.c	/^#define MAX(/;"	d	file:
MIN	wintext.c	/^#define MIN(/;"	d	file:
MaxBuffer	launcher.c	/^#define MaxBuffer /;"	d	file:
MaxBuffer	sysefl.c	/^#define MaxBuffer /;"	d	file:
MaxBuffer	syseoi.c	/^#define MaxBuffer /;"	d	file:
MaxBuffer	sysgtk.c	/^#define MaxBuffer /;"	d	file:
NFILTERS	launchgtk.c	/^#define NFILTERS /;"	d	file:
NULL	gi_blorb.c	/^#define NULL /;"	d	file:
NULL	gi_dispa.c	/^#define NULL /;"	d	file:
NUMCLASSES	gi_dispa.c	/^#define NUMCLASSES /;"	d	file:
NUMFUNCTIONS	gi_dispa.c	/^#define NUMFUNCTIONS /;"	d	file:
NUMINTCONSTANTS	gi_dispa.c	/^#define NUMINTCONSTANTS /;"	d	file:
OFFSET28	cgdate.c	/^#define OFFSET28 /;"	d	file:
OFFSET84	cgdate.c	/^#define OFFSET84 /;"	d	file:
PRIMARY	sysefl.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	e	enum:clipsource	file:
PRIMARY	syseoi.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	e	enum:clipsource	file:
PRIMARY	sysgtk.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	e	enum:clipsource	file:
RETURN_COMBINING_CLASS	cgunigen.c	/^#define RETURN_COMBINING_CLASS(/;"	d	file:
RETURN_COMPOSITION	cgunigen.c	/^#define RETURN_COMPOSITION(/;"	d	file:
SCALE	imgscale.c	/^#define SCALE /;"	d	file:
SDL_CHANNELS	sndsdl.c	/^#define SDL_CHANNELS /;"	d	file:
SLOP	wintext.c	/^#define SLOP /;"	d	file:
TRUE	gi_blorb.c	/^#define TRUE /;"	d	file:
TXTSIZE	ttsspeechd.c	/^#define TXTSIZE /;"	d	file:
TXTSIZE	ttswin.c	/^#define TXTSIZE /;"	d	file:
T_ADRIFT	launcher.c	/^#define T_ADRIFT /;"	d	file:
T_ADVSYS	launcher.c	/^#define T_ADVSYS /;"	d	file:
T_AGT	launcher.c	/^#define T_AGT /;"	d	file:
T_ALAN2	launcher.c	/^#define T_ALAN2 /;"	d	file:
T_ALAN3	launcher.c	/^#define T_ALAN3 /;"	d	file:
T_GLULX	launcher.c	/^#define T_GLULX /;"	d	file:
T_HUGO	launcher.c	/^#define T_HUGO /;"	d	file:
T_JACL	launcher.c	/^#define T_JACL /;"	d	file:
T_LEV9	launcher.c	/^#define T_LEV9 /;"	d	file:
T_MGSR	launcher.c	/^#define T_MGSR /;"	d	file:
T_QUEST	launcher.c	/^#define T_QUEST /;"	d	file:
T_SCOTT	launcher.c	/^#define T_SCOTT /;"	d	file:
T_TADS2	launcher.c	/^#define T_TADS2 /;"	d	file:
T_TADS3	launcher.c	/^#define T_TADS3 /;"	d	file:
T_ZCODE	launcher.c	/^#define T_ZCODE /;"	d	file:
T_ZSIX	launcher.c	/^#define T_ZSIX /;"	d	file:
UNICODE_NOCHAR	syswin.c	/^#define UNICODE_NOCHAR /;"	d	file:
UTC_1901	cgdate.c	/^#define UTC_1901 /;"	d	file:
UTC_1951	cgdate.c	/^#define UTC_1951 /;"	d	file:
Uni_IsSurrogate1	syswin.c	/^#define Uni_IsSurrogate1(/;"	d	file:
Uni_IsSurrogate2	syswin.c	/^#define Uni_IsSurrogate2(/;"	d	file:
Uni_SurrogateToUTF32	syswin.c	/^#define Uni_SurrogateToUTF32(/;"	d	file:
Uni_UTF32ToSurrogate1	syswin.c	/^#define Uni_UTF32ToSurrogate1(/;"	d	file:
Uni_UTF32ToSurrogate2	syswin.c	/^#define Uni_UTF32ToSurrogate2(/;"	d	file:
WIN32_LEAN_AND_MEAN	syswin.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	ttswin.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WM_UNICHAR	syswin.c	/^#define WM_UNICHAR /;"	d	file:
_GNU_SOURCE	syseoi.c	/^#define _GNU_SOURCE$/;"	d	file:
__anon133030920108	syseoi.c	/^typedef struct {$/;"	s	file:
_op	syseoi.c	/^} _op;$/;"	t	typeref:struct:__anon133030920108	file:
acceptline	wingrid.c	/^static void acceptline(window_t *win, glui32 keycode)$/;"	f	typeref:typename:void	file:
acceptline	wintext.c	/^static void acceptline(window_t *win, glui32 keycode)$/;"	f	typeref:typename:void	file:
add_extension_to_filter	launchgtk.c	/^static void add_extension_to_filter(GtkFileFilter *filter, const char *ext)$/;"	f	typeref:typename:void	file:
adv	draw.c	/^    int adv;$/;"	m	struct:fentry_s	typeref:typename:int	file:
alloced_highentries	draw.c	/^    int num_highentries, alloced_highentries;$/;"	m	struct:font_s	typeref:typename:int	file:
argv0	syswin.c	/^static char *argv0;$/;"	v	typeref:typename:char *	file:
attrbg	window.c	/^unsigned char *attrbg(style_t *styles, attr_t *attr)$/;"	f	typeref:typename:unsigned char *
attrclear	window.c	/^void attrclear(attr_t *attr)$/;"	f	typeref:typename:void
attrequal	window.c	/^int attrequal(attr_t *a1, attr_t *a2)$/;"	f	typeref:typename:int
attrfg	window.c	/^unsigned char *attrfg(style_t *styles, attr_t *attr)$/;"	f	typeref:typename:unsigned char *
attrfont	window.c	/^int attrfont(style_t *styles, attr_t *attr)$/;"	f	typeref:typename:int
attrset	window.c	/^void attrset(attr_t *attr, glui32 style)$/;"	f	typeref:typename:void
auxdatnum	gi_blorb.c	/^    int auxdatnum; \/* entry in the auxsound\/auxpict array; -1 if none.$/;"	m	struct:giblorb_chunkdesc_struct	typeref:typename:int	file:
bitmap_s	draw.c	/^struct bitmap_s$/;"	s	file:
bitmap_t	draw.c	/^typedef struct bitmap_s bitmap_t;$/;"	t	typeref:struct:bitmap_s	file:
blorbfile	cgblorb.c	/^static strid_t blorbfile = NULL;$/;"	v	typeref:typename:strid_t	file:
blorbmap	cgblorb.c	/^static giblorb_map_t *blorbmap = NULL;$/;"	v	typeref:typename:giblorb_map_t *	file:
brmsg	launchefl.c	/^char brmsg[MaxBuffer];$/;"	v	typeref:typename:char[]
buf	launchefl.c	/^char buf[MaxBuffer];$/;"	v	typeref:typename:char[]
buf	launcheoi.c	/^char buf[MaxBuffer];$/;"	v	typeref:typename:char[]
buf	launchgtk.c	/^static char buf[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
buf	launchwin.c	/^static char buf[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
calcwidth	wintext.c	/^static int calcwidth(window_textbuffer_t *dwin,$/;"	f	typeref:typename:int	file:
canvas	sysefl.c	/^static Evas_Object *canvas;$/;"	v	typeref:typename:Evas_Object *	file:
canvas	syseoi.c	/^static Evas_Object *canvas;$/;"	v	typeref:typename:Evas_Object *	file:
canvas	sysgtk.c	/^static GtkWidget *canvas;$/;"	v	typeref:typename:GtkWidget *	file:
caps_lock	syseoi.c	/^static void caps_lock(vk_info_t *info)$/;"	f	typeref:typename:void	file:
change_layout	syseoi.c	/^static void change_layout(vk_info_t *info)$/;"	f	typeref:typename:void	file:
char_tolower_table	cgmisc.c	/^static unsigned char char_tolower_table[256];$/;"	v	typeref:typename:unsigned char[256]	file:
char_toupper_table	cgmisc.c	/^static unsigned char char_toupper_table[256];$/;"	v	typeref:typename:unsigned char[256]	file:
charkern	draw.c	/^static int charkern(font_t *f, int c0, int c1)$/;"	f	typeref:typename:int	file:
check_composition	cgunicod.c	/^static glui32 check_composition(glui32 ch1, glui32 ch2)$/;"	f	typeref:typename:glui32	file:
chunknum	gi_blorb.c	/^    glui32 chunknum;$/;"	m	struct:giblorb_resdesc_struct	typeref:typename:glui32	file:
chunks	gi_blorb.c	/^    giblorb_chunkdesc_t *chunks; \/* list of chunk descriptors *\/$/;"	m	struct:giblorb_map_struct	typeref:typename:giblorb_chunkdesc_t *	file:
cid	draw.c	/^    glui32 cid;$/;"	m	struct:fentry_s	typeref:typename:glui32	file:
class_table	gi_dispa.c	/^static gidispatch_intconst_t class_table[] = {$/;"	v	typeref:typename:gidispatch_intconst_t[]	file:
cleanup_channel	sndsdl.c	/^static void cleanup_channel(schanid_t chan)$/;"	f	typeref:typename:void	file:
cliplen	sysefl.c	/^static int cliplen = 0;$/;"	v	typeref:typename:int	file:
cliplen	syseoi.c	/^static int cliplen = 0;$/;"	v	typeref:typename:int	file:
cliplen	sysgtk.c	/^static int cliplen = 0;$/;"	v	typeref:typename:int	file:
cliplen	syswin.c	/^static int cliplen = 0;$/;"	v	typeref:typename:int	file:
clipsource	sysefl.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	g	file:
clipsource	syseoi.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	g	file:
clipsource	sysgtk.c	/^enum clipsource { PRIMARY , CLIPBOARD };$/;"	g	file:
cliptext	sysefl.c	/^static char *cliptext = NULL;$/;"	v	typeref:typename:char *	file:
cliptext	syseoi.c	/^static char *cliptext = NULL;$/;"	v	typeref:typename:char *	file:
cliptext	sysgtk.c	/^static char *cliptext = NULL;$/;"	v	typeref:typename:char *	file:
cliptext	syswin.c	/^static wchar_t *cliptext = NULL;$/;"	v	typeref:typename:wchar_t *	file:
close_settings	syseoi.c	/^static void close_settings(vk_info_t *info){}$/;"	f	typeref:typename:void	file:
combining_class	cgunicod.c	/^static glui32 combining_class(glui32 ch)$/;"	f	typeref:typename:glui32	file:
configterp	launcher.c	/^static int configterp(char *path, char *game)$/;"	f	typeref:typename:int	file:
curr_layout	syseoi.c	/^    Eina_List *curr_layout;$/;"	m	struct:vk_info_t	typeref:typename:Eina_List *	file:
cursor_left	syseoi.c	/^static void cursor_left(vk_info_t *info)   { gli_input_handle_key(keycode_Left); }$/;"	f	typeref:typename:void	file:
cursor_right	syseoi.c	/^static void cursor_right(vk_info_t *info)  { gli_input_handle_key(keycode_Right); }$/;"	f	typeref:typename:void	file:
data	draw.c	/^    unsigned char *data;$/;"	m	struct:bitmap_s	typeref:typename:unsigned char *	file:
datpos	gi_blorb.c	/^    glui32 datpos; \/* start of data (either startpos or startpos+8) *\/$/;"	m	struct:giblorb_chunkdesc_struct	typeref:typename:glui32	file:
delete_char	syseoi.c	/^static void delete_char(vk_info_t *info)   { gli_input_handle_key(keycode_Delete); }$/;"	f	typeref:typename:void	file:
dibinf	syswin.c	/^static BITMAPINFO *dibinf;$/;"	v	typeref:typename:BITMAPINFO *	file:
dir	launchefl.c	/^char dir[MaxBuffer];$/;"	v	typeref:typename:char[]
dir	launcheoi.c	/^char dir[MaxBuffer];$/;"	v	typeref:typename:char[]
dir	launchgtk.c	/^static char dir[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
dir	launchwin.c	/^static char dir[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
disable_idlers	sysefl.c	/^static void disable_idlers()$/;"	f	typeref:typename:void	file:
disable_idlers	syseoi.c	/^static void disable_idlers()$/;"	f	typeref:typename:void	file:
do_nothing	sysgtk.c	/^static int do_nothing(void *data)$/;"	f	typeref:typename:int	file:
draw_bitmap	draw.c	/^static inline void draw_bitmap(bitmap_t *b, int x, int y, unsigned char *rgb)$/;"	f	typeref:typename:void	file:
draw_bitmap_lcd	draw.c	/^static inline void draw_bitmap_lcd(bitmap_t *b, int x, int y, unsigned char *rgb)$/;"	f	typeref:typename:void	file:
drawpicture	wingfx.c	/^static void drawpicture(picture_t *src, window_graphics_t *dst,$/;"	f	typeref:typename:void	file:
enable_idlers	sysefl.c	/^static void enable_idlers()$/;"	f	typeref:typename:void	file:
enable_idlers	syseoi.c	/^static void enable_idlers()$/;"	f	typeref:typename:void	file:
exe	launcher.c	/^static char exe[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
exts	launchgtk.c	/^    const char **exts;$/;"	m	struct:filter	typeref:typename:const char **	file:
face	draw.c	/^    FT_Face face;$/;"	m	struct:font_s	typeref:typename:FT_Face	file:
fentry_s	draw.c	/^struct fentry_s$/;"	s	file:
fentry_t	draw.c	/^typedef struct fentry_s fentry_t;$/;"	t	typeref:struct:fentry_s	file:
file	gi_blorb.c	/^    strid_t file;$/;"	m	struct:giblorb_map_struct	typeref:typename:strid_t	file:
filepath	sysefl.c	/^static char filepath[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
filepath	syseoi.c	/^static char filepath[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
filepath	sysgtk.c	/^static char filepath[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
fileselect	sysefl.c	/^static int fileselect = 0;$/;"	v	typeref:typename:int	file:
fileselect	syseoi.c	/^static int fileselect = 0;$/;"	v	typeref:typename:int	file:
fileselect	sysgtk.c	/^static int fileselect = 0;$/;"	v	typeref:typename:int	file:
filter	launchgtk.c	/^struct filter$/;"	s	file:
filtercount	launchefl.c	/^const int filtercount = 15;$/;"	v	typeref:typename:const int
filterlist	launchefl.c	/^char *filterlist[] =$/;"	v	typeref:typename:char * []
filterlist	launchwin.c	/^static char filterlist[] =$/;"	v	typeref:typename:char[]	file:
filters	launchgtk.c	/^static struct filter filters[] =$/;"	v	typeref:struct:filter[]	file:
find_font_by_styles	fontfc.c	/^static char *find_font_by_styles(const char *basefont, ...)$/;"	f	typeref:typename:char *	file:
find_font_file	fontwin.c	/^static int find_font_file(const char *facename, char *filepath, size_t length)$/;"	f	typeref:typename:int	file:
find_font_file_with_key	fontwin.c	/^static int find_font_file_with_key(HKEY key, const char * subkey, const char *facename, char *fi/;"	f	typeref:typename:int	file:
findfont	fontfc.c	/^static bool findfont(const char *fontname, char *fontpath, size_t n)$/;"	f	typeref:typename:bool	file:
findhighglyph	draw.c	/^static int findhighglyph(glui32 cid, fentry_t *entries, int length)$/;"	f	typeref:typename:int	file:
findterp	launcher.c	/^static int findterp(const char *file, const char *target)$/;"	f	typeref:typename:int	file:
flags	launcher.c	/^static char flags[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
font2idx	config.c	/^static int font2idx(char *font)$/;"	f	typeref:typename:int	file:
font_s	draw.c	/^struct font_s$/;"	s	file:
font_t	draw.c	/^typedef struct font_s font_t;$/;"	t	typeref:struct:font_s	file:
fontload	fontfc.c	/^void fontload(void)$/;"	f	typeref:typename:void
fontload	fontwin.c	/^void fontload(void)$/;"	f	typeref:typename:void
fontreplace	fontfc.c	/^void fontreplace(char *font, int type)$/;"	f	typeref:typename:void
fontreplace	fontwin.c	/^void fontreplace(char *font, int type)$/;"	f	typeref:typename:void
fontunload	fontfc.c	/^void fontunload(void)$/;"	f	typeref:typename:void
fontunload	fontwin.c	/^void fontunload(void)$/;"	f	typeref:typename:void
frame	sysefl.c	/^static Ecore_Evas *frame;$/;"	v	typeref:typename:Ecore_Evas *	file:
frame	syseoi.c	/^static Ecore_Evas *frame;$/;"	v	typeref:typename:Ecore_Evas *	file:
frame	sysgtk.c	/^static GtkWidget *frame;$/;"	v	typeref:typename:GtkWidget *	file:
frameproc	syswin.c	/^frameproc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT CALLBACK
ftlib	draw.c	/^static FT_Library ftlib;$/;"	v	typeref:typename:FT_Library	file:
ftmat	draw.c	/^static FT_Matrix ftmat;$/;"	v	typeref:typename:FT_Matrix	file:
function_table	gi_dispa.c	/^static gidispatch_function_t function_table[] = {$/;"	v	typeref:typename:gidispatch_function_t[]	file:
gammacopy	draw.c	/^static void gammacopy(unsigned char *dst, unsigned char *src, int n)$/;"	f	typeref:typename:void	file:
gammacopy_lcd	draw.c	/^static void gammacopy_lcd(unsigned char *dst, unsigned char *src, int w, int h, int pitch)$/;"	f	typeref:typename:void	file:
gammamap	draw.c	/^static unsigned char gammamap[256];$/;"	v	typeref:typename:unsigned char[256]	file:
garglk_fileref_get_name	cgfref.c	/^char *garglk_fileref_get_name(fileref_t *fref)$/;"	f	typeref:typename:char *
garglk_set_program_info	cgmisc.c	/^void garglk_set_program_info(const char *info)$/;"	f	typeref:typename:void
garglk_set_program_name	cgmisc.c	/^void garglk_set_program_name(const char *name)$/;"	f	typeref:typename:void
garglk_set_reversevideo	cgstream.c	/^void garglk_set_reversevideo(glui32 reverse)$/;"	f	typeref:typename:void
garglk_set_reversevideo_stream	cgstream.c	/^void garglk_set_reversevideo_stream(stream_t *str, glui32 reverse)$/;"	f	typeref:typename:void
garglk_set_story_name	cgmisc.c	/^void garglk_set_story_name(const char *name)$/;"	f	typeref:typename:void
garglk_set_story_title	cgmisc.c	/^void garglk_set_story_title(const char *title)$/;"	f	typeref:typename:void
garglk_set_zcolors	cgstream.c	/^void garglk_set_zcolors(glui32 fg, glui32 bg)$/;"	f	typeref:typename:void
garglk_set_zcolors_stream	cgstream.c	/^void garglk_set_zcolors_stream(stream_t *str, glui32 fg, glui32 bg)$/;"	f	typeref:typename:void
garglk_unput_string	cgstream.c	/^void garglk_unput_string(char *s)$/;"	f	typeref:typename:void
garglk_unput_string_uni	cgstream.c	/^void garglk_unput_string_uni(glui32 *s)$/;"	f	typeref:typename:void
gcmd_accept_scroll	wintext.c	/^int gcmd_accept_scroll(window_t *win, glui32 arg)$/;"	f	typeref:typename:int
gcmd_buffer_accept_readchar	wintext.c	/^void gcmd_buffer_accept_readchar(window_t *win, glui32 arg)$/;"	f	typeref:typename:void
gcmd_buffer_accept_readline	wintext.c	/^void gcmd_buffer_accept_readline(window_t *win, glui32 arg)$/;"	f	typeref:typename:void
gcmd_grid_accept_readchar	wingrid.c	/^void gcmd_grid_accept_readchar(window_t *win, glui32 arg)$/;"	f	typeref:typename:void
gcmd_grid_accept_readline	wingrid.c	/^void gcmd_grid_accept_readline(window_t *win, glui32 arg)$/;"	f	typeref:typename:void
gdk_hand	sysgtk.c	/^static GdkCursor *gdk_hand;$/;"	v	typeref:typename:GdkCursor *	file:
gdk_ibeam	sysgtk.c	/^static GdkCursor *gdk_ibeam;$/;"	v	typeref:typename:GdkCursor *	file:
get_action	syseoi.c	/^get_action(vk_info_t *info, const char *key)$/;"	f	typeref:typename:const char *	file:
getglyph	draw.c	/^static void getglyph(font_t *f, glui32 cid, int *adv, bitmap_t **glyphs)$/;"	f	typeref:typename:void	file:
gfont_table	draw.c	/^static font_t gfont_table[8];$/;"	v	typeref:typename:font_t[8]	file:
giblorb_ID_AIFF	sndsdl.c	/^#define giblorb_ID_AIFF /;"	d	file:
giblorb_ID_FORM	gi_blorb.c	/^#define giblorb_ID_FORM /;"	d	file:
giblorb_ID_FORM	sndfmod.c	/^#define giblorb_ID_FORM /;"	d	file:
giblorb_ID_FORM	sndsdl.c	/^#define giblorb_ID_FORM /;"	d	file:
giblorb_ID_IFRS	gi_blorb.c	/^#define giblorb_ID_IFRS /;"	d	file:
giblorb_ID_JPEG	imgload.c	/^#define giblorb_ID_JPEG /;"	d	file:
giblorb_ID_MIDI	sndfmod.c	/^#define giblorb_ID_MIDI	/;"	d	file:
giblorb_ID_MOD	sndfmod.c	/^#define giblorb_ID_MOD /;"	d	file:
giblorb_ID_MOD	sndsdl.c	/^#define giblorb_ID_MOD /;"	d	file:
giblorb_ID_MP3	sndfmod.c	/^#define giblorb_ID_MP3	/;"	d	file:
giblorb_ID_MP3	sndsdl.c	/^#define giblorb_ID_MP3 /;"	d	file:
giblorb_ID_OGG	sndfmod.c	/^#define giblorb_ID_OGG	/;"	d	file:
giblorb_ID_OGG	sndsdl.c	/^#define giblorb_ID_OGG /;"	d	file:
giblorb_ID_PNG	imgload.c	/^#define giblorb_ID_PNG /;"	d	file:
giblorb_ID_RIdx	gi_blorb.c	/^#define giblorb_ID_RIdx /;"	d	file:
giblorb_ID_WAVE	sndfmod.c	/^#define giblorb_ID_WAVE	/;"	d	file:
giblorb_ID_WAVE	sndsdl.c	/^#define giblorb_ID_WAVE /;"	d	file:
giblorb_Inited_Magic	gi_blorb.c	/^#define giblorb_Inited_Magic /;"	d	file:
giblorb_bsearch	gi_blorb.c	/^giblorb_resdesc_t *giblorb_bsearch(giblorb_resdesc_t *sample,$/;"	f	typeref:typename:giblorb_resdesc_t *
giblorb_chunkdesc_struct	gi_blorb.c	/^typedef struct giblorb_chunkdesc_struct {$/;"	s	file:
giblorb_chunkdesc_t	gi_blorb.c	/^} giblorb_chunkdesc_t;$/;"	t	typeref:struct:giblorb_chunkdesc_struct	file:
giblorb_count_resources	gi_blorb.c	/^giblorb_err_t giblorb_count_resources(giblorb_map_t *map, glui32 usage,$/;"	f	typeref:typename:giblorb_err_t
giblorb_create_map	gi_blorb.c	/^giblorb_err_t giblorb_create_map(strid_t file, giblorb_map_t **newmap)$/;"	f	typeref:typename:giblorb_err_t
giblorb_destroy_map	gi_blorb.c	/^giblorb_err_t giblorb_destroy_map(giblorb_map_t *map)$/;"	f	typeref:typename:giblorb_err_t
giblorb_free	gi_blorb.c	/^static void giblorb_free(void *ptr)$/;"	f	typeref:typename:void	file:
giblorb_get_resource	cgblorb.c	/^void giblorb_get_resource(glui32 usage, glui32 resnum,$/;"	f	typeref:typename:void
giblorb_get_resource_map	cgblorb.c	/^giblorb_map_t *giblorb_get_resource_map()$/;"	f	typeref:typename:giblorb_map_t *
giblorb_initialize	gi_blorb.c	/^static giblorb_err_t giblorb_initialize()$/;"	f	typeref:typename:giblorb_err_t	file:
giblorb_initialize_map	gi_blorb.c	/^static giblorb_err_t giblorb_initialize_map(giblorb_map_t *map)$/;"	f	typeref:typename:giblorb_err_t	file:
giblorb_is_resource_map	cgblorb.c	/^int giblorb_is_resource_map()$/;"	f	typeref:typename:int
giblorb_load_chunk_by_number	gi_blorb.c	/^giblorb_err_t giblorb_load_chunk_by_number(giblorb_map_t *map,$/;"	f	typeref:typename:giblorb_err_t
giblorb_load_chunk_by_type	gi_blorb.c	/^giblorb_err_t giblorb_load_chunk_by_type(giblorb_map_t *map,$/;"	f	typeref:typename:giblorb_err_t
giblorb_load_resource	gi_blorb.c	/^giblorb_err_t giblorb_load_resource(giblorb_map_t *map, glui32 method,$/;"	f	typeref:typename:giblorb_err_t
giblorb_malloc	gi_blorb.c	/^static void *giblorb_malloc(glui32 len)$/;"	f	typeref:typename:void *	file:
giblorb_map_struct	gi_blorb.c	/^struct giblorb_map_struct {$/;"	s	file:
giblorb_native4	gi_blorb.c	/^#define giblorb_native4(/;"	d	file:
giblorb_qsort	gi_blorb.c	/^static void giblorb_qsort(giblorb_resdesc_t **list, int len)$/;"	f	typeref:typename:void	file:
giblorb_realloc	gi_blorb.c	/^static void *giblorb_realloc(void *ptr, glui32 len)$/;"	f	typeref:typename:void *	file:
giblorb_resdesc_struct	gi_blorb.c	/^typedef struct giblorb_resdesc_struct {$/;"	s	file:
giblorb_resdesc_t	gi_blorb.c	/^} giblorb_resdesc_t;$/;"	t	typeref:struct:giblorb_resdesc_struct	file:
giblorb_set_resource_map	cgblorb.c	/^giblorb_err_t giblorb_set_resource_map(strid_t file)$/;"	f	typeref:typename:giblorb_err_t
giblorb_unload_chunk	gi_blorb.c	/^giblorb_err_t giblorb_unload_chunk(giblorb_map_t *map, glui32 chunknum)$/;"	f	typeref:typename:giblorb_err_t
gidispatch_call	gi_dispa.c	/^void gidispatch_call(glui32 funcnum, glui32 numargs, gluniversal_t *arglist)$/;"	f	typeref:typename:void
gidispatch_count_classes	gi_dispa.c	/^glui32 gidispatch_count_classes()$/;"	f	typeref:typename:glui32
gidispatch_count_functions	gi_dispa.c	/^glui32 gidispatch_count_functions()$/;"	f	typeref:typename:glui32
gidispatch_count_intconst	gi_dispa.c	/^glui32 gidispatch_count_intconst()$/;"	f	typeref:typename:glui32
gidispatch_get_class	gi_dispa.c	/^gidispatch_intconst_t *gidispatch_get_class(glui32 index)$/;"	f	typeref:typename:gidispatch_intconst_t *
gidispatch_get_function	gi_dispa.c	/^gidispatch_function_t *gidispatch_get_function(glui32 index)$/;"	f	typeref:typename:gidispatch_function_t *
gidispatch_get_function_by_id	gi_dispa.c	/^gidispatch_function_t *gidispatch_get_function_by_id(glui32 id)$/;"	f	typeref:typename:gidispatch_function_t *
gidispatch_get_intconst	gi_dispa.c	/^gidispatch_intconst_t *gidispatch_get_intconst(glui32 index)$/;"	f	typeref:typename:gidispatch_intconst_t *
gidispatch_get_objrock	cgmisc.c	/^gidispatch_rock_t gidispatch_get_objrock(void *obj, glui32 objclass)$/;"	f	typeref:typename:gidispatch_rock_t
gidispatch_prototype	gi_dispa.c	/^char *gidispatch_prototype(glui32 funcnum)$/;"	f	typeref:typename:char *
gidispatch_set_object_registry	cgmisc.c	/^void gidispatch_set_object_registry($/;"	f	typeref:typename:void
gidispatch_set_retained_registry	cgmisc.c	/^void gidispatch_set_retained_registry($/;"	f	typeref:typename:void
gli_baseline	config.c	/^int gli_baseline = 15;$/;"	v	typeref:typename:int
gli_border_color	config.c	/^unsigned char gli_border_color[3] = { 0x00, 0x00, 0x00 };$/;"	v	typeref:typename:unsigned char[3]
gli_border_save	config.c	/^unsigned char gli_border_save[3] = { 0x00, 0x00, 0x00 };$/;"	v	typeref:typename:unsigned char[3]
gli_bpp	draw.c	/^static const int gli_bpp = 1;$/;"	v	typeref:typename:const int	file:
gli_bpp	draw.c	/^static const int gli_bpp = 3;$/;"	v	typeref:typename:const int	file:
gli_bpp	draw.c	/^static const int gli_bpp = 4;$/;"	v	typeref:typename:const int	file:
gli_buffer_canon_compose_uni	cgunicod.c	/^static glui32 gli_buffer_canon_compose_uni(glui32 *buf, glui32 len)$/;"	f	typeref:typename:glui32	file:
gli_buffer_canon_decompose_uni	cgunicod.c	/^static glui32 *gli_buffer_canon_decompose_uni(glui32 *buf,$/;"	f	typeref:typename:glui32 *	file:
gli_buffer_change_case	cgunicod.c	/^static glui32 gli_buffer_change_case(glui32 *buf, glui32 len,$/;"	f	typeref:typename:glui32	file:
gli_calc_padding	window.c	/^void gli_calc_padding(window_t *win, int *x, int *y)$/;"	f	typeref:typename:void
gli_caret_color	config.c	/^unsigned char gli_caret_color[3] = { 0x00, 0x00, 0x00 };$/;"	v	typeref:typename:unsigned char[3]
gli_caret_save	config.c	/^unsigned char gli_caret_save[3] = { 0x00, 0x00, 0x00 };$/;"	v	typeref:typename:unsigned char[3]
gli_caret_shape	config.c	/^int gli_caret_shape = 2;$/;"	v	typeref:typename:int
gli_cellh	draw.c	/^int gli_cellh = 8;$/;"	v	typeref:typename:int
gli_cellw	draw.c	/^int gli_cellw = 8;$/;"	v	typeref:typename:int
gli_channellist	sndfmod.c	/^static channel_t *gli_channellist = NULL;$/;"	v	typeref:typename:channel_t *	file:
gli_channellist	sndsdl.c	/^static channel_t *gli_channellist = NULL;$/;"	v	typeref:typename:channel_t *	file:
gli_check_selection	winmask.c	/^int gli_check_selection(unsigned int x0, unsigned int y0,$/;"	f	typeref:typename:int
gli_claimselect	winmask.c	/^int gli_claimselect = FALSE;$/;"	v	typeref:typename:int
gli_clear_selection	winmask.c	/^void gli_clear_selection(void)$/;"	f	typeref:typename:void
gli_clipboard_copy	winmask.c	/^void gli_clipboard_copy(glui32 *buf, int len)$/;"	f	typeref:typename:void
gli_cols	config.c	/^int gli_cols = 60;$/;"	v	typeref:typename:int
gli_conf_caps	config.c	/^int gli_conf_caps = 0;$/;"	v	typeref:typename:int
gli_conf_dashes	config.c	/^int gli_conf_dashes = 1;$/;"	v	typeref:typename:int
gli_conf_fullscreen	config.c	/^int gli_conf_fullscreen = 0;$/;"	v	typeref:typename:int
gli_conf_gamma	config.c	/^float gli_conf_gamma = 1.0;$/;"	v	typeref:typename:float
gli_conf_graphics	config.c	/^int gli_conf_graphics = 1;$/;"	v	typeref:typename:int
gli_conf_justify	config.c	/^int gli_conf_justify = 0;$/;"	v	typeref:typename:int
gli_conf_lcd	config.c	/^int gli_conf_lcd = 1;$/;"	v	typeref:typename:int
gli_conf_lockcols	config.c	/^int gli_conf_lockcols = FALSE;$/;"	v	typeref:typename:int
gli_conf_lockrows	config.c	/^int gli_conf_lockrows = FALSE;$/;"	v	typeref:typename:int
gli_conf_monoaspect	config.c	/^float gli_conf_monoaspect = 1.0;$/;"	v	typeref:typename:float
gli_conf_monob	config.c	/^char *gli_conf_monob = "GoMono-Bold";$/;"	v	typeref:typename:char *
gli_conf_monofont	config.c	/^char *gli_conf_monofont = "";$/;"	v	typeref:typename:char *
gli_conf_monofont	config.c	/^char *gli_conf_monofont = "Liberation Mono";$/;"	v	typeref:typename:char *
gli_conf_monoi	config.c	/^char *gli_conf_monoi = "GoMono-Italic";$/;"	v	typeref:typename:char *
gli_conf_monor	config.c	/^char *gli_conf_monor = "GoMono-Regular";$/;"	v	typeref:typename:char *
gli_conf_monosize	config.c	/^float gli_conf_monosize = 12.5;	\/* good size for GoMono *\/$/;"	v	typeref:typename:float
gli_conf_monosize	config.c	/^float gli_conf_monosize = 12.5;	\/* good size for LiberationMono *\/$/;"	v	typeref:typename:float
gli_conf_monoz	config.c	/^char *gli_conf_monoz = "GoMono-BoldItalic";$/;"	v	typeref:typename:char *
gli_conf_propaspect	config.c	/^float gli_conf_propaspect = 1.0;$/;"	v	typeref:typename:float
gli_conf_propb	config.c	/^char *gli_conf_propb = "NotoSerif-Bold";$/;"	v	typeref:typename:char *
gli_conf_propfont	config.c	/^char *gli_conf_propfont = "";$/;"	v	typeref:typename:char *
gli_conf_propfont	config.c	/^char *gli_conf_propfont = "Linux Libertine O";$/;"	v	typeref:typename:char *
gli_conf_propi	config.c	/^char *gli_conf_propi = "NotoSerif-Italic";$/;"	v	typeref:typename:char *
gli_conf_propr	config.c	/^char *gli_conf_propr = "NotoSerif-Regular";$/;"	v	typeref:typename:char *
gli_conf_propsize	config.c	/^float gli_conf_propsize = 13.4;	\/* good size for NotoSerif *\/$/;"	v	typeref:typename:float
gli_conf_propsize	config.c	/^float gli_conf_propsize = 15.5;	\/* good size for Libertine *\/$/;"	v	typeref:typename:float
gli_conf_propz	config.c	/^char *gli_conf_propz = "NotoSerif-BoldItalic";$/;"	v	typeref:typename:char *
gli_conf_quotes	config.c	/^int gli_conf_quotes = 1;$/;"	v	typeref:typename:int
gli_conf_safeclicks	config.c	/^int gli_conf_safeclicks = 0;$/;"	v	typeref:typename:int
gli_conf_sound	config.c	/^int gli_conf_sound = 1;$/;"	v	typeref:typename:int
gli_conf_spaces	config.c	/^int gli_conf_spaces = 0;$/;"	v	typeref:typename:int
gli_conf_speak	config.c	/^int gli_conf_speak = 0;$/;"	v	typeref:typename:int
gli_conf_speak_input	config.c	/^int gli_conf_speak_input = 0;$/;"	v	typeref:typename:int
gli_conf_speak_language	config.c	/^const char *gli_conf_speak_language = NULL;$/;"	v	typeref:typename:const char *
gli_conf_stylehint	config.c	/^int gli_conf_stylehint = 1;$/;"	v	typeref:typename:int
gli_copyselect	winmask.c	/^int gli_copyselect = FALSE;$/;"	v	typeref:typename:int
gli_curevent	event.c	/^event_t *gli_curevent = NULL;$/;"	v	typeref:typename:event_t *
gli_currentstr	cgstream.c	/^static stream_t *gli_currentstr = NULL;$/;"	v	typeref:typename:stream_t *	file:
gli_date_from_tm	cgdate.c	/^static void gli_date_from_tm(glkdate_t *date, struct tm *tm)$/;"	f	typeref:typename:void	file:
gli_date_to_tm	cgdate.c	/^static glsi32 gli_date_to_tm(glkdate_t *date, struct tm *tm)$/;"	f	typeref:typename:glsi32	file:
gli_delete_fileref	cgfref.c	/^void gli_delete_fileref(fileref_t *fref)$/;"	f	typeref:typename:void
gli_delete_stream	cgstream.c	/^void gli_delete_stream(stream_t *str)$/;"	f	typeref:typename:void
gli_delete_window	window.c	/^void gli_delete_window(window_t *win)$/;"	f	typeref:typename:void
gli_dispatch_event	event.c	/^void gli_dispatch_event(event_t *event, int polled)$/;"	f	typeref:typename:void
gli_draw_caret	draw.c	/^void gli_draw_caret(int x, int y)$/;"	f	typeref:typename:void
gli_draw_clear	draw.c	/^void gli_draw_clear(unsigned char *rgb)$/;"	f	typeref:typename:void
gli_draw_picture	draw.c	/^void gli_draw_picture(picture_t *src, int x0, int y0, int dx0, int dy0, int dx1, int dy1)$/;"	f	typeref:typename:void
gli_draw_pixel	draw.c	/^void gli_draw_pixel(int x, int y, unsigned char alpha, unsigned char *rgb)$/;"	f	typeref:typename:void
gli_draw_pixel_lcd	draw.c	/^void gli_draw_pixel_lcd(int x, int y, unsigned char *alpha, unsigned char *rgb)$/;"	f	typeref:typename:void
gli_draw_rect	draw.c	/^void gli_draw_rect(int x0, int y0, int w, int h, unsigned char *rgb)$/;"	f	typeref:typename:void
gli_draw_string	draw.c	/^int gli_draw_string(int x, int y, int fidx, unsigned char *rgb,$/;"	f	typeref:typename:int
gli_draw_string_uni	draw.c	/^int gli_draw_string_uni(int x, int y, int fidx, unsigned char *rgb,$/;"	f	typeref:typename:int
gli_drawselect	winmask.c	/^int gli_drawselect = FALSE;$/;"	v	typeref:typename:int
gli_event_store	event.c	/^void gli_event_store(glui32 type, window_t *win, glui32 val1, glui32 val2)$/;"	f	typeref:typename:void
gli_events_logged	event.c	/^static eventqueue_t *gli_events_logged = NULL;$/;"	v	typeref:typename:eventqueue_t *	file:
gli_events_polled	event.c	/^static eventqueue_t *gli_events_polled = NULL;$/;"	v	typeref:typename:eventqueue_t *	file:
gli_filereflist	cgfref.c	/^static fileref_t *gli_filereflist = NULL;$/;"	v	typeref:typename:fileref_t *	file:
gli_first_event	event.c	/^static int gli_first_event = FALSE;$/;"	v	typeref:typename:int	file:
gli_focuswin	window.c	/^window_t *gli_focuswin = NULL; \/* The window selected by the player *\/$/;"	v	typeref:typename:window_t *
gli_force_redraw	window.c	/^int gli_force_redraw = 1;$/;"	v	typeref:typename:int
gli_forceclick	window.c	/^int gli_forceclick = 0;$/;"	v	typeref:typename:int
gli_free_tts	ttsnull.c	/^void gli_free_tts(void)$/;"	f	typeref:typename:void
gli_free_tts	ttsspeechd.c	/^void gli_free_tts(void)$/;"	f	typeref:typename:void
gli_free_tts	ttswin.c	/^void gli_free_tts(void)$/;"	f	typeref:typename:void
gli_get_buffer	cgstream.c	/^static glui32 gli_get_buffer(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:glui32	file:
gli_get_buffer_uni	cgstream.c	/^static glui32 gli_get_buffer_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:glui32	file:
gli_get_builtin_font	fontdata.c	/^void gli_get_builtin_font(int idx, const unsigned char **ptr, unsigned int *len)$/;"	f	typeref:typename:void
gli_get_char	cgstream.c	/^static glsi32 gli_get_char(stream_t *str)$/;"	f	typeref:typename:glsi32	file:
gli_get_char_uni	cgstream.c	/^static glsi32 gli_get_char_uni(stream_t *str)$/;"	f	typeref:typename:glsi32	file:
gli_get_hyperlink	winmask.c	/^glui32 gli_get_hyperlink(unsigned int x, unsigned int y)$/;"	f	typeref:typename:glui32
gli_get_line	cgstream.c	/^static glui32 gli_get_line(stream_t *str, char *cbuf, glui32 len)$/;"	f	typeref:typename:glui32	file:
gli_get_line_uni	cgstream.c	/^static glui32 gli_get_line_uni(stream_t *str, glui32 *ubuf, glui32 len)$/;"	f	typeref:typename:glui32	file:
gli_get_selection	winmask.c	/^int gli_get_selection(unsigned int x0, unsigned int y0,$/;"	f	typeref:typename:int
gli_getchar_utf8	cgunicod.c	/^glui32 gli_getchar_utf8(FILE *fl)$/;"	f	typeref:typename:glui32
gli_gstyles	config.c	/^style_t gli_gstyles[style_NUMSTYLES] =$/;"	v	typeref:typename:style_t[]
gli_gstyles_def	config.c	/^style_t gli_gstyles_def[style_NUMSTYLES];$/;"	v	typeref:typename:style_t[]
gli_image_h	draw.c	/^int gli_image_h = 0;$/;"	v	typeref:typename:int
gli_image_rgb	draw.c	/^unsigned char *gli_image_rgb = NULL;$/;"	v	typeref:typename:unsigned char *
gli_image_s	draw.c	/^int gli_image_s = 0;$/;"	v	typeref:typename:int
gli_image_w	draw.c	/^int gli_image_w = 0;$/;"	v	typeref:typename:int
gli_initialize_babel	babeldata.c	/^void gli_initialize_babel(void)$/;"	f	typeref:typename:void
gli_initialize_fonts	draw.c	/^void gli_initialize_fonts(void)$/;"	f	typeref:typename:void
gli_initialize_misc	cgmisc.c	/^void gli_initialize_misc()$/;"	f	typeref:typename:void
gli_initialize_queue	event.c	/^eventqueue_t *gli_initialize_queue (void)$/;"	f	typeref:typename:eventqueue_t *
gli_initialize_sound	sndfmod.c	/^void gli_initialize_sound(void)$/;"	f	typeref:typename:void
gli_initialize_sound	sndnull.c	/^void gli_initialize_sound(void)$/;"	f	typeref:typename:void
gli_initialize_sound	sndsdl.c	/^void gli_initialize_sound(void)$/;"	f	typeref:typename:void
gli_initialize_tts	ttsnull.c	/^void gli_initialize_tts(void)$/;"	f	typeref:typename:void
gli_initialize_tts	ttsspeechd.c	/^void gli_initialize_tts(void)$/;"	f	typeref:typename:void
gli_initialize_tts	ttswin.c	/^void gli_initialize_tts(void)$/;"	f	typeref:typename:void
gli_initialize_windows	window.c	/^void gli_initialize_windows()$/;"	f	typeref:typename:void
gli_input_guess_focus	event.c	/^void gli_input_guess_focus()$/;"	f	typeref:typename:void
gli_input_handle_click	event.c	/^void gli_input_handle_click(int x, int y)$/;"	f	typeref:typename:void
gli_input_handle_key	event.c	/^void gli_input_handle_key(glui32 key)$/;"	f	typeref:typename:void
gli_input_more_focus	event.c	/^void gli_input_more_focus()$/;"	f	typeref:typename:void
gli_input_next_focus	event.c	/^void gli_input_next_focus()$/;"	f	typeref:typename:void
gli_input_scroll_focus	event.c	/^void gli_input_scroll_focus()$/;"	f	typeref:typename:void
gli_interrupt_handler	window.c	/^void (*gli_interrupt_handler)(void) = NULL;$/;"	v	typeref:typename:void (*)(void)
gli_leading	config.c	/^int gli_leading = 20;$/;"	v	typeref:typename:int
gli_link_color	config.c	/^unsigned char gli_link_color[3] = { 0x00, 0x00, 0x60 };$/;"	v	typeref:typename:unsigned char[3]
gli_link_save	config.c	/^unsigned char gli_link_save[3] = { 0x00, 0x00, 0x60 };$/;"	v	typeref:typename:unsigned char[3]
gli_link_style	config.c	/^int gli_link_style = 1;$/;"	v	typeref:typename:int
gli_mask	winmask.c	/^static mask_t *gli_mask;$/;"	v	typeref:typename:mask_t *	file:
gli_mktime	cgdate.c	/^time_t gli_mktime (struct tm * timeptr)$/;"	f	typeref:typename:time_t
gli_more_align	config.c	/^int gli_more_align = 0;$/;"	v	typeref:typename:int
gli_more_color	config.c	/^unsigned char gli_more_color[3] = { 0x00, 0x00, 0x00 };$/;"	v	typeref:typename:unsigned char[3]
gli_more_focus	window.c	/^int gli_more_focus = 0;$/;"	v	typeref:typename:int
gli_more_font	config.c	/^int gli_more_font = PROPB;$/;"	v	typeref:typename:int
gli_more_prompt	config.c	/^char *gli_more_prompt = "\\207 more \\207";$/;"	v	typeref:typename:char *
gli_more_save	config.c	/^unsigned char gli_more_save[3] = { 0x00, 0x00, 0x00 };$/;"	v	typeref:typename:unsigned char[3]
gli_move_selection	winmask.c	/^void gli_move_selection(int x, int y)$/;"	f	typeref:typename:void
gli_new_fileref	cgfref.c	/^fileref_t *gli_new_fileref(char *filename, glui32 usage, glui32 rock)$/;"	f	typeref:typename:fileref_t *
gli_new_stream	cgstream.c	/^stream_t *gli_new_stream(glui32 type, int readable, int writable, glui32 rock, int unicode)$/;"	f	typeref:typename:stream_t *
gli_new_window	window.c	/^window_t *gli_new_window(glui32 type, glui32 rock)$/;"	f	typeref:typename:window_t *
gli_notification_waiting	sysefl.c	/^void gli_notification_waiting(void)$/;"	f	typeref:typename:void
gli_notification_waiting	syseoi.c	/^void gli_notification_waiting(void)$/;"	f	typeref:typename:void
gli_notification_waiting	sysgtk.c	/^void gli_notification_waiting(void)$/;"	f	typeref:typename:void
gli_notification_waiting	syswin.c	/^void gli_notification_waiting(void)$/;"	f	typeref:typename:void
gli_override_bg_set	config.c	/^int gli_override_bg_set = 0;$/;"	v	typeref:typename:int
gli_override_bg_val	config.c	/^int gli_override_bg_val = 0;$/;"	v	typeref:typename:int
gli_override_fg_set	config.c	/^int gli_override_fg_set = 0;$/;"	v	typeref:typename:int
gli_override_fg_val	config.c	/^int gli_override_fg_val = 0;$/;"	v	typeref:typename:int
gli_override_reverse	config.c	/^int gli_override_reverse = 0;$/;"	v	typeref:typename:int
gli_parse_utf8	cgunicod.c	/^glui32 gli_parse_utf8(unsigned char *buf, glui32 buflen,$/;"	f	typeref:typename:glui32
gli_piclist_clear	imgload.c	/^void gli_piclist_clear(void)$/;"	f	typeref:typename:void
gli_piclist_decrement	imgload.c	/^void gli_piclist_decrement(void)$/;"	f	typeref:typename:void
gli_piclist_increment	imgload.c	/^void gli_piclist_increment(void)$/;"	f	typeref:typename:void
gli_piclist_refcount	imgload.c	/^static int gli_piclist_refcount = 0;	\/* count references to loaded pictures *\/$/;"	v	typeref:typename:int	file:
gli_piclist_search	imgload.c	/^piclist_t *gli_piclist_search(unsigned long id)$/;"	f	typeref:typename:piclist_t *
gli_picture_decrement	imgload.c	/^void gli_picture_decrement(picture_t *pic)$/;"	f	typeref:typename:void
gli_picture_discard	imgload.c	/^static void gli_picture_discard(picture_t *pic)$/;"	f	typeref:typename:void	file:
gli_picture_increment	imgload.c	/^void gli_picture_increment(picture_t *pic)$/;"	f	typeref:typename:void
gli_picture_load	imgload.c	/^picture_t *gli_picture_load(unsigned long id)$/;"	f	typeref:typename:picture_t *
gli_picture_retrieve	imgload.c	/^picture_t *gli_picture_retrieve(unsigned long id, int scaled)$/;"	f	typeref:typename:picture_t *
gli_picture_scale	imgscale.c	/^gli_picture_scale(picture_t *src, int newcols, int newrows)$/;"	f	typeref:typename:picture_t *
gli_picture_store	imgload.c	/^void gli_picture_store(picture_t *pic)$/;"	f	typeref:typename:void
gli_picture_store_original	imgload.c	/^void gli_picture_store_original(picture_t *pic)$/;"	f	typeref:typename:void
gli_picture_store_scaled	imgload.c	/^void gli_picture_store_scaled(picture_t *pic)$/;"	f	typeref:typename:void
gli_program_info	cgmisc.c	/^char gli_program_info[256] = "";$/;"	v	typeref:typename:char[256]
gli_program_name	cgmisc.c	/^char gli_program_name[256] = "Unknown";$/;"	v	typeref:typename:char[256]
gli_put_buffer	cgstream.c	/^static void gli_put_buffer(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:void	file:
gli_put_buffer_uni	cgstream.c	/^static void gli_put_buffer_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:void	file:
gli_put_char	cgstream.c	/^static void gli_put_char(stream_t *str, unsigned char ch)$/;"	f	typeref:typename:void	file:
gli_put_char_uni	cgstream.c	/^static void gli_put_char_uni(stream_t *str, glui32 ch)$/;"	f	typeref:typename:void	file:
gli_put_hyperlink	winmask.c	/^void gli_put_hyperlink(glui32 linkval, unsigned int x0, unsigned int y0, unsigned int x1, unsign/;"	f	typeref:typename:void
gli_putchar_utf8	cgunicod.c	/^void gli_putchar_utf8(glui32 val, FILE *fl)$/;"	f	typeref:typename:void
gli_queue_event	event.c	/^void gli_queue_event(eventqueue_t *queue, event_t *msg)$/;"	f	typeref:typename:void
gli_read_config	config.c	/^void gli_read_config(int argc, char **argv)$/;"	f	typeref:typename:void
gli_redraw_rect	window.c	/^void gli_redraw_rect(int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
gli_register_arr	cgmisc.c	/^gidispatch_rock_t (*gli_register_arr)(void *array, glui32 len,$/;"	v	typeref:typename:gidispatch_rock_t (*)(void * array,glui32 len,char * typecode)
gli_register_obj	cgmisc.c	/^gidispatch_rock_t (*gli_register_obj)(void *obj, glui32 objclass) = NULL;$/;"	v	typeref:typename:gidispatch_rock_t (*)(void * obj,glui32 objclass)
gli_resize_mask	winmask.c	/^void gli_resize_mask(unsigned int x, unsigned int y)$/;"	f	typeref:typename:void
gli_retrieve_event	event.c	/^event_t *gli_retrieve_event(eventqueue_t *queue)$/;"	f	typeref:typename:event_t *
gli_rootwin	window.c	/^window_t *gli_rootwin = NULL; \/* The topmost window. *\/$/;"	v	typeref:typename:window_t *
gli_rows	config.c	/^int gli_rows = 25;$/;"	v	typeref:typename:int
gli_scroll_bg	config.c	/^unsigned char gli_scroll_bg[3] = { 0xb0, 0xb0, 0xb0 };$/;"	v	typeref:typename:unsigned char[3]
gli_scroll_fg	config.c	/^unsigned char gli_scroll_fg[3] = { 0x80, 0x80, 0x80 };$/;"	v	typeref:typename:unsigned char[3]
gli_scroll_width	config.c	/^int gli_scroll_width = 0;$/;"	v	typeref:typename:int
gli_select	sysefl.c	/^void gli_select(event_t *event, int polled)$/;"	f	typeref:typename:void
gli_select	syseoi.c	/^void gli_select(event_t *event, int polled)$/;"	f	typeref:typename:void
gli_select	sysgtk.c	/^void gli_select(event_t *event, int polled)$/;"	f	typeref:typename:void
gli_select	syswin.c	/^void gli_select(event_t *event, int polled)$/;"	f	typeref:typename:void
gli_set_hyperlink	cgstream.c	/^static void gli_set_hyperlink(stream_t *str, glui32 linkval)$/;"	f	typeref:typename:void	file:
gli_set_reversevideo	cgstream.c	/^static void gli_set_reversevideo(stream_t *str, glui32 reverse)$/;"	f	typeref:typename:void	file:
gli_set_style	cgstream.c	/^static void gli_set_style(stream_t *str, glui32 val)$/;"	f	typeref:typename:void	file:
gli_set_zcolors	cgstream.c	/^static void gli_set_zcolors(stream_t *str, glui32 fg, glui32 bg)$/;"	f	typeref:typename:void	file:
gli_simplify_time	cgdate.c	/^static glsi32 gli_simplify_time(time_t timestamp, glui32 factor)$/;"	f	typeref:typename:glsi32	file:
gli_start_selection	winmask.c	/^void gli_start_selection(int x, int y)$/;"	f	typeref:typename:void
gli_startup	config.c	/^void gli_startup(int argc, char *argv[])$/;"	f	typeref:typename:void
gli_story_name	cgmisc.c	/^char gli_story_name[256] = "";$/;"	v	typeref:typename:char[256]
gli_story_title	cgmisc.c	/^char gli_story_title[256] = "";$/;"	v	typeref:typename:char[256]
gli_stream_close	cgstream.c	/^void gli_stream_close(stream_t *str)$/;"	f	typeref:typename:void
gli_stream_echo_line	cgstream.c	/^void gli_stream_echo_line(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:void
gli_stream_echo_line_uni	cgstream.c	/^void gli_stream_echo_line_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:void
gli_stream_ensure_op	cgstream.c	/^static void gli_stream_ensure_op(stream_t *str, glui32 op)$/;"	f	typeref:typename:void	file:
gli_stream_fill_result	cgstream.c	/^void gli_stream_fill_result(stream_t *str, stream_result_t *result)$/;"	f	typeref:typename:void
gli_stream_open_file	cgstream.c	/^static stream_t *gli_stream_open_file(frefid_t fref, glui32 fmode,$/;"	f	typeref:typename:stream_t *	file:
gli_stream_open_pathname	cgstream.c	/^stream_t *gli_stream_open_pathname(char *pathname, int textmode, glui32 rock)$/;"	f	typeref:typename:stream_t *
gli_stream_open_window	cgstream.c	/^stream_t *gli_stream_open_window(window_t *win)$/;"	f	typeref:typename:stream_t *
gli_stream_set_current	cgstream.c	/^void gli_stream_set_current(stream_t *str)$/;"	f	typeref:typename:void
gli_streamlist	cgstream.c	/^static stream_t *gli_streamlist = NULL;$/;"	v	typeref:typename:stream_t *	file:
gli_streams_close_all	cgstream.c	/^void gli_streams_close_all()$/;"	f	typeref:typename:void
gli_string_width	draw.c	/^int gli_string_width(int fidx, unsigned char *s, int n, int spw)$/;"	f	typeref:typename:int
gli_string_width_uni	draw.c	/^int gli_string_width_uni(int fidx, glui32 *s, int n, int spw)$/;"	f	typeref:typename:int
gli_sys_monob	fontwin.c	/^static int gli_sys_monob = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_monoi	fontwin.c	/^static int gli_sys_monoi = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_monor	fontwin.c	/^static int gli_sys_monor = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_monoz	fontwin.c	/^static int gli_sys_monoz = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_propb	fontwin.c	/^static int gli_sys_propb = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_propi	fontwin.c	/^static int gli_sys_propi = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_propr	fontwin.c	/^static int gli_sys_propr = FALSE;$/;"	v	typeref:typename:int	file:
gli_sys_propz	fontwin.c	/^static int gli_sys_propz = FALSE;$/;"	v	typeref:typename:int	file:
gli_terminated	cgmisc.c	/^int gli_terminated = 0;$/;"	v	typeref:typename:int
gli_timestamp_to_time	cgdate.c	/^static void gli_timestamp_to_time(time_t timestamp, glsi32 microsec,$/;"	f	typeref:typename:void	file:
gli_tmarginx	config.c	/^int gli_tmarginx = 7;$/;"	v	typeref:typename:int
gli_tmarginy	config.c	/^int gli_tmarginy = 7;$/;"	v	typeref:typename:int
gli_tstyles	config.c	/^style_t gli_tstyles[style_NUMSTYLES] =$/;"	v	typeref:typename:style_t[]
gli_tstyles_def	config.c	/^style_t gli_tstyles_def[style_NUMSTYLES];$/;"	v	typeref:typename:style_t[]
gli_tts_flush	ttsnull.c	/^void gli_tts_flush(void)$/;"	f	typeref:typename:void
gli_tts_flush	ttsspeechd.c	/^void gli_tts_flush(void)$/;"	f	typeref:typename:void
gli_tts_flush	ttswin.c	/^void gli_tts_flush(void)$/;"	f	typeref:typename:void
gli_tts_purge	ttsnull.c	/^void gli_tts_purge(void)$/;"	f	typeref:typename:void
gli_tts_purge	ttsspeechd.c	/^void gli_tts_purge(void)$/;"	f	typeref:typename:void
gli_tts_purge	ttswin.c	/^void gli_tts_purge(void)$/;"	f	typeref:typename:void
gli_tts_speak	ttsnull.c	/^void gli_tts_speak(const glui32 *buf, size_t len)$/;"	f	typeref:typename:void
gli_tts_speak	ttsspeechd.c	/^void gli_tts_speak(const glui32 *buf, size_t len)$/;"	f	typeref:typename:void
gli_tts_speak	ttswin.c	/^void gli_tts_speak(const glui32 *buf, size_t len)$/;"	f	typeref:typename:void
gli_unput_buffer	cgstream.c	/^static void gli_unput_buffer(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:void	file:
gli_unput_buffer_uni	cgstream.c	/^static void gli_unput_buffer_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:void	file:
gli_unregister_arr	cgmisc.c	/^void (*gli_unregister_arr)(void *array, glui32 len, char *typecode,$/;"	v	typeref:typename:void (*)(void * array,glui32 len,char * typecode,gidispatch_rock_t objrock)
gli_unregister_obj	cgmisc.c	/^void (*gli_unregister_obj)(void *obj, glui32 objclass,$/;"	v	typeref:typename:void (*)(void * obj,glui32 objclass,gidispatch_rock_t objrock)
gli_utf8input	config.c	/^int gli_utf8input = FALSE ;$/;"	v	typeref:typename:int
gli_utf8output	config.c	/^int gli_utf8output = FALSE ;$/;"	v	typeref:typename:int
gli_wborderx	config.c	/^int gli_wborderx = 1;$/;"	v	typeref:typename:int
gli_wbordery	config.c	/^int gli_wbordery = 1;$/;"	v	typeref:typename:int
gli_window_check_terminator	window.c	/^int gli_window_check_terminator(glui32 ch)$/;"	f	typeref:typename:int
gli_window_click	window.c	/^void gli_window_click(window_t *win, int x, int y)$/;"	f	typeref:typename:void
gli_window_close	window.c	/^static void gli_window_close(window_t *win, int recurse)$/;"	f	typeref:typename:void	file:
gli_window_color	config.c	/^unsigned char gli_window_color[3] = { 0xff, 0xff, 0xff };$/;"	v	typeref:typename:unsigned char[3]
gli_window_iterate_treeorder	window.c	/^window_t *gli_window_iterate_treeorder(window_t *win)$/;"	f	typeref:typename:window_t *
gli_window_put_char_uni	window.c	/^void gli_window_put_char_uni(window_t *win, glui32 ch)$/;"	f	typeref:typename:void
gli_window_rearrange	window.c	/^void gli_window_rearrange(window_t *win, rect_t *box)$/;"	f	typeref:typename:void
gli_window_redraw	window.c	/^void gli_window_redraw(window_t *win)$/;"	f	typeref:typename:void
gli_window_refocus	window.c	/^void gli_window_refocus(window_t *win)$/;"	f	typeref:typename:void
gli_window_save	config.c	/^unsigned char gli_window_save[3] = { 0xff, 0xff, 0xff };$/;"	v	typeref:typename:unsigned char[3]
gli_window_unput_char_uni	window.c	/^int gli_window_unput_char_uni(window_t *win, glui32 ch)$/;"	f	typeref:typename:int
gli_windowlist	window.c	/^static window_t *gli_windowlist = NULL;$/;"	v	typeref:typename:window_t *	file:
gli_windows_rearrange	window.c	/^static void gli_windows_rearrange(void)$/;"	f	typeref:typename:void	file:
gli_windows_redraw	window.c	/^void gli_windows_redraw()$/;"	f	typeref:typename:void
gli_windows_size_change	window.c	/^void gli_windows_size_change()$/;"	f	typeref:typename:void
gli_windows_unechostream	window.c	/^void gli_windows_unechostream(stream_t *str)$/;"	f	typeref:typename:void
gli_wmarginx	config.c	/^int gli_wmarginx = 15;$/;"	v	typeref:typename:int
gli_wmarginx_save	config.c	/^int gli_wmarginx_save = 15;$/;"	v	typeref:typename:int
gli_wmarginy	config.c	/^int gli_wmarginy = 15;$/;"	v	typeref:typename:int
gli_wmarginy_save	config.c	/^int gli_wmarginy_save = 15;$/;"	v	typeref:typename:int
gli_workdir	cgfref.c	/^char gli_workdir[1024] = ".";$/;"	v	typeref:typename:char[1024]
gli_workfile	cgfref.c	/^char gli_workfile[1024] = "";$/;"	v	typeref:typename:char[1024]
gli_wpaddingx	config.c	/^int gli_wpaddingx = 0;$/;"	v	typeref:typename:int
gli_wpaddingy	config.c	/^int gli_wpaddingy = 0;$/;"	v	typeref:typename:int
glk_buffer_canon_decompose_uni	cgunicod.c	/^glui32 glk_buffer_canon_decompose_uni(glui32 *buf, glui32 len,$/;"	f	typeref:typename:glui32
glk_buffer_canon_normalize_uni	cgunicod.c	/^glui32 glk_buffer_canon_normalize_uni(glui32 *buf, glui32 len,$/;"	f	typeref:typename:glui32
glk_buffer_to_lower_case_uni	cgunicod.c	/^glui32 glk_buffer_to_lower_case_uni(glui32 *buf, glui32 len,$/;"	f	typeref:typename:glui32
glk_buffer_to_title_case_uni	cgunicod.c	/^glui32 glk_buffer_to_title_case_uni(glui32 *buf, glui32 len,$/;"	f	typeref:typename:glui32
glk_buffer_to_upper_case_uni	cgunicod.c	/^glui32 glk_buffer_to_upper_case_uni(glui32 *buf, glui32 len,$/;"	f	typeref:typename:glui32
glk_cancel_char_event	window.c	/^void glk_cancel_char_event(window_t *win)$/;"	f	typeref:typename:void
glk_cancel_hyperlink_event	nohyper.c	/^void glk_cancel_hyperlink_event(winid_t win)$/;"	f	typeref:typename:void
glk_cancel_hyperlink_event	window.c	/^void glk_cancel_hyperlink_event(winid_t win)$/;"	f	typeref:typename:void
glk_cancel_line_event	window.c	/^void glk_cancel_line_event(window_t *win, event_t *ev)$/;"	f	typeref:typename:void
glk_cancel_mouse_event	window.c	/^void glk_cancel_mouse_event(window_t *win)$/;"	f	typeref:typename:void
glk_char_to_lower	cgmisc.c	/^unsigned char glk_char_to_lower(unsigned char ch)$/;"	f	typeref:typename:unsigned char
glk_char_to_upper	cgmisc.c	/^unsigned char glk_char_to_upper(unsigned char ch)$/;"	f	typeref:typename:unsigned char
glk_current_simple_time	cgdate.c	/^glsi32 glk_current_simple_time(glui32 factor)$/;"	f	typeref:typename:glsi32
glk_current_time	cgdate.c	/^void glk_current_time(glktimeval_t *time)$/;"	f	typeref:typename:void
glk_date_to_simple_time_local	cgdate.c	/^glsi32 glk_date_to_simple_time_local(glkdate_t *date, glui32 factor)$/;"	f	typeref:typename:glsi32
glk_date_to_simple_time_utc	cgdate.c	/^glsi32 glk_date_to_simple_time_utc(glkdate_t *date, glui32 factor)$/;"	f	typeref:typename:glsi32
glk_date_to_time_local	cgdate.c	/^void glk_date_to_time_local(glkdate_t *date, glktimeval_t *time)$/;"	f	typeref:typename:void
glk_date_to_time_utc	cgdate.c	/^void glk_date_to_time_utc(glkdate_t *date, glktimeval_t *time)$/;"	f	typeref:typename:void
glk_exit	cgmisc.c	/^void glk_exit()$/;"	f	typeref:typename:void
glk_fileref_create_by_name	cgfref.c	/^frefid_t glk_fileref_create_by_name(glui32 usage, char *name,$/;"	f	typeref:typename:frefid_t
glk_fileref_create_by_prompt	cgfref.c	/^frefid_t glk_fileref_create_by_prompt(glui32 usage, glui32 fmode, glui32 rock)$/;"	f	typeref:typename:frefid_t
glk_fileref_create_from_fileref	cgfref.c	/^frefid_t glk_fileref_create_from_fileref(glui32 usage, frefid_t oldfref,$/;"	f	typeref:typename:frefid_t
glk_fileref_create_temp	cgfref.c	/^frefid_t glk_fileref_create_temp(glui32 usage, glui32 rock)$/;"	f	typeref:typename:frefid_t
glk_fileref_delete_file	cgfref.c	/^void glk_fileref_delete_file(fileref_t *fref)$/;"	f	typeref:typename:void
glk_fileref_destroy	cgfref.c	/^void glk_fileref_destroy(fileref_t *fref)$/;"	f	typeref:typename:void
glk_fileref_does_file_exist	cgfref.c	/^glui32 glk_fileref_does_file_exist(fileref_t *fref)$/;"	f	typeref:typename:glui32
glk_fileref_get_rock	cgfref.c	/^glui32 glk_fileref_get_rock(fileref_t *fref)$/;"	f	typeref:typename:glui32
glk_fileref_iterate	cgfref.c	/^frefid_t glk_fileref_iterate(fileref_t *fref, glui32 *rock)$/;"	f	typeref:typename:frefid_t
glk_gestalt	cggestal.c	/^glui32 glk_gestalt(glui32 id, glui32 val)$/;"	f	typeref:typename:glui32
glk_gestalt_ext	cggestal.c	/^glui32 glk_gestalt_ext(glui32 id, glui32 val, glui32 *arr,$/;"	f	typeref:typename:glui32
glk_get_buffer_stream	cgstream.c	/^glui32 glk_get_buffer_stream(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:glui32
glk_get_buffer_stream_uni	cgstream.c	/^glui32 glk_get_buffer_stream_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:glui32
glk_get_char_stream	cgstream.c	/^glsi32 glk_get_char_stream(stream_t *str)$/;"	f	typeref:typename:glsi32
glk_get_char_stream_uni	cgstream.c	/^glsi32 glk_get_char_stream_uni(stream_t *str)$/;"	f	typeref:typename:glsi32
glk_get_line_stream	cgstream.c	/^glui32 glk_get_line_stream(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:glui32
glk_get_line_stream_uni	cgstream.c	/^glui32 glk_get_line_stream_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:glui32
glk_image_draw	imgnull.c	/^glui32 glk_image_draw(winid_t win, glui32 image, glsi32 val1, glsi32 val2)$/;"	f	typeref:typename:glui32
glk_image_draw	window.c	/^glui32 glk_image_draw(winid_t win, glui32 image, glsi32 val1, glsi32 val2)$/;"	f	typeref:typename:glui32
glk_image_draw_scaled	imgnull.c	/^glui32 glk_image_draw_scaled(winid_t win, glui32 image,$/;"	f	typeref:typename:glui32
glk_image_draw_scaled	window.c	/^glui32 glk_image_draw_scaled(winid_t win, glui32 image,$/;"	f	typeref:typename:glui32
glk_image_get_info	imgnull.c	/^glui32 glk_image_get_info(glui32 image, glui32 *width, glui32 *height)$/;"	f	typeref:typename:glui32
glk_image_get_info	window.c	/^glui32 glk_image_get_info(glui32 image, glui32 *width, glui32 *height)$/;"	f	typeref:typename:glui32
glk_put_buffer	cgstream.c	/^void glk_put_buffer(char *buf, glui32 len)$/;"	f	typeref:typename:void
glk_put_buffer_stream	cgstream.c	/^void glk_put_buffer_stream(stream_t *str, char *buf, glui32 len)$/;"	f	typeref:typename:void
glk_put_buffer_stream_uni	cgstream.c	/^void glk_put_buffer_stream_uni(stream_t *str, glui32 *buf, glui32 len)$/;"	f	typeref:typename:void
glk_put_buffer_uni	cgstream.c	/^void glk_put_buffer_uni(glui32 *buf, glui32 len)$/;"	f	typeref:typename:void
glk_put_char	cgstream.c	/^void glk_put_char(unsigned char ch)$/;"	f	typeref:typename:void
glk_put_char_stream	cgstream.c	/^void glk_put_char_stream(stream_t *str, unsigned char ch)$/;"	f	typeref:typename:void
glk_put_char_stream_uni	cgstream.c	/^void glk_put_char_stream_uni(stream_t *str, glui32 ch)$/;"	f	typeref:typename:void
glk_put_char_uni	cgstream.c	/^void glk_put_char_uni(glui32 ch)$/;"	f	typeref:typename:void
glk_put_string	cgstream.c	/^void glk_put_string(char *s)$/;"	f	typeref:typename:void
glk_put_string_stream	cgstream.c	/^void glk_put_string_stream(stream_t *str, char *s)$/;"	f	typeref:typename:void
glk_put_string_stream_uni	cgstream.c	/^void glk_put_string_stream_uni(stream_t *str, glui32 *s)$/;"	f	typeref:typename:void
glk_put_string_uni	cgstream.c	/^void glk_put_string_uni(glui32 *s)$/;"	f	typeref:typename:void
glk_request_char_event	window.c	/^void glk_request_char_event(window_t *win)$/;"	f	typeref:typename:void
glk_request_char_event_uni	window.c	/^void glk_request_char_event_uni(window_t *win)$/;"	f	typeref:typename:void
glk_request_hyperlink_event	nohyper.c	/^void glk_request_hyperlink_event(winid_t win)$/;"	f	typeref:typename:void
glk_request_hyperlink_event	window.c	/^void glk_request_hyperlink_event(winid_t win)$/;"	f	typeref:typename:void
glk_request_line_event	window.c	/^void glk_request_line_event(window_t *win, char *buf, glui32 maxlen,$/;"	f	typeref:typename:void
glk_request_line_event_uni	window.c	/^void glk_request_line_event_uni(window_t *win, glui32 *buf, glui32 maxlen,$/;"	f	typeref:typename:void
glk_request_mouse_event	window.c	/^void glk_request_mouse_event(window_t *win)$/;"	f	typeref:typename:void
glk_request_timer_events	sysefl.c	/^void glk_request_timer_events(glui32 millisecs)$/;"	f	typeref:typename:void
glk_request_timer_events	syseoi.c	/^void glk_request_timer_events(glui32 millisecs)$/;"	f	typeref:typename:void
glk_request_timer_events	sysgtk.c	/^void glk_request_timer_events(glui32 millisecs)$/;"	f	typeref:typename:void
glk_request_timer_events	syswin.c	/^void glk_request_timer_events(glui32 millisecs)$/;"	f	typeref:typename:void
glk_schannel_create	sndfmod.c	/^schanid_t glk_schannel_create(glui32 rock)$/;"	f	typeref:typename:schanid_t
glk_schannel_create	sndnull.c	/^schanid_t glk_schannel_create(glui32 rock)$/;"	f	typeref:typename:schanid_t
glk_schannel_create	sndsdl.c	/^schanid_t glk_schannel_create(glui32 rock)$/;"	f	typeref:typename:schanid_t
glk_schannel_create_ext	sndnull.c	/^schanid_t glk_schannel_create_ext(glui32 rock, glui32 volume)$/;"	f	typeref:typename:schanid_t
glk_schannel_create_ext	sndsdl.c	/^schanid_t glk_schannel_create_ext(glui32 rock, glui32 volume)$/;"	f	typeref:typename:schanid_t
glk_schannel_destroy	sndfmod.c	/^void glk_schannel_destroy(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_destroy	sndnull.c	/^void glk_schannel_destroy(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_destroy	sndsdl.c	/^void glk_schannel_destroy(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_get_rock	sndfmod.c	/^glui32 glk_schannel_get_rock(schanid_t chan)$/;"	f	typeref:typename:glui32
glk_schannel_get_rock	sndnull.c	/^glui32 glk_schannel_get_rock(schanid_t chan)$/;"	f	typeref:typename:glui32
glk_schannel_get_rock	sndsdl.c	/^glui32 glk_schannel_get_rock(schanid_t chan)$/;"	f	typeref:typename:glui32
glk_schannel_iterate	sndfmod.c	/^schanid_t glk_schannel_iterate(schanid_t chan, glui32 *rock)$/;"	f	typeref:typename:schanid_t
glk_schannel_iterate	sndnull.c	/^schanid_t glk_schannel_iterate(schanid_t chan, glui32 *rockptr)$/;"	f	typeref:typename:schanid_t
glk_schannel_iterate	sndsdl.c	/^schanid_t glk_schannel_iterate(schanid_t chan, glui32 *rock)$/;"	f	typeref:typename:schanid_t
glk_schannel_pause	sndnull.c	/^void glk_schannel_pause(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_pause	sndsdl.c	/^void glk_schannel_pause(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_play	sndfmod.c	/^glui32 glk_schannel_play(schanid_t chan, glui32 snd)$/;"	f	typeref:typename:glui32
glk_schannel_play	sndnull.c	/^glui32 glk_schannel_play(schanid_t chan, glui32 snd)$/;"	f	typeref:typename:glui32
glk_schannel_play	sndsdl.c	/^glui32 glk_schannel_play(schanid_t chan, glui32 snd)$/;"	f	typeref:typename:glui32
glk_schannel_play_ext	sndfmod.c	/^glui32 glk_schannel_play_ext(schanid_t chan, glui32 snd, glui32 repeats, glui32 notify)$/;"	f	typeref:typename:glui32
glk_schannel_play_ext	sndnull.c	/^glui32 glk_schannel_play_ext(schanid_t chan, glui32 snd, glui32 repeats,$/;"	f	typeref:typename:glui32
glk_schannel_play_ext	sndsdl.c	/^glui32 glk_schannel_play_ext(schanid_t chan, glui32 snd, glui32 repeats, glui32 notify)$/;"	f	typeref:typename:glui32
glk_schannel_play_multi	sndnull.c	/^glui32 glk_schannel_play_multi(schanid_t *chanarray, glui32 chancount,$/;"	f	typeref:typename:glui32
glk_schannel_play_multi	sndsdl.c	/^glui32 glk_schannel_play_multi(schanid_t *chanarray, glui32 chancount,$/;"	f	typeref:typename:glui32
glk_schannel_set_volume	sndfmod.c	/^void glk_schannel_set_volume(schanid_t chan, glui32 vol)$/;"	f	typeref:typename:void
glk_schannel_set_volume	sndnull.c	/^void glk_schannel_set_volume(schanid_t chan, glui32 vol)$/;"	f	typeref:typename:void
glk_schannel_set_volume	sndsdl.c	/^void glk_schannel_set_volume(schanid_t chan, glui32 vol)$/;"	f	typeref:typename:void
glk_schannel_set_volume_ext	sndnull.c	/^void glk_schannel_set_volume_ext(schanid_t chan, glui32 vol,$/;"	f	typeref:typename:void
glk_schannel_set_volume_ext	sndsdl.c	/^void glk_schannel_set_volume_ext(schanid_t chan, glui32 vol,$/;"	f	typeref:typename:void
glk_schannel_stop	sndfmod.c	/^void glk_schannel_stop(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_stop	sndnull.c	/^void glk_schannel_stop(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_stop	sndsdl.c	/^void glk_schannel_stop(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_unpause	sndnull.c	/^void glk_schannel_unpause(schanid_t chan)$/;"	f	typeref:typename:void
glk_schannel_unpause	sndsdl.c	/^void glk_schannel_unpause(schanid_t chan)$/;"	f	typeref:typename:void
glk_select	event.c	/^void glk_select(event_t *event)$/;"	f	typeref:typename:void
glk_select_poll	event.c	/^void glk_select_poll(event_t *event)$/;"	f	typeref:typename:void
glk_set_echo_line_event	window.c	/^void glk_set_echo_line_event(window_t *win, glui32 val)$/;"	f	typeref:typename:void
glk_set_hyperlink	cgstream.c	/^void glk_set_hyperlink(glui32 linkval)$/;"	f	typeref:typename:void
glk_set_hyperlink	nohyper.c	/^void glk_set_hyperlink(glui32 linkval)$/;"	f	typeref:typename:void
glk_set_hyperlink_stream	cgstream.c	/^void glk_set_hyperlink_stream(stream_t *str, glui32 linkval)$/;"	f	typeref:typename:void
glk_set_hyperlink_stream	nohyper.c	/^void glk_set_hyperlink_stream(strid_t str, glui32 linkval)$/;"	f	typeref:typename:void
glk_set_interrupt_handler	cgmisc.c	/^void glk_set_interrupt_handler(void (*func)(void))$/;"	f	typeref:typename:void
glk_set_style	cgstream.c	/^void glk_set_style(glui32 val)$/;"	f	typeref:typename:void
glk_set_style_stream	cgstream.c	/^void glk_set_style_stream(stream_t *str, glui32 val)$/;"	f	typeref:typename:void
glk_set_terminators_line_event	window.c	/^void glk_set_terminators_line_event(winid_t win, glui32 *keycodes, glui32 count)$/;"	f	typeref:typename:void
glk_set_window	window.c	/^void glk_set_window(window_t *win)$/;"	f	typeref:typename:void
glk_simple_time_to_date_local	cgdate.c	/^void glk_simple_time_to_date_local(glsi32 time, glui32 factor,$/;"	f	typeref:typename:void
glk_simple_time_to_date_utc	cgdate.c	/^void glk_simple_time_to_date_utc(glsi32 time, glui32 factor,$/;"	f	typeref:typename:void
glk_sound_load_hint	sndfmod.c	/^void glk_sound_load_hint(glui32 snd, glui32 flag)$/;"	f	typeref:typename:void
glk_sound_load_hint	sndnull.c	/^void glk_sound_load_hint(glui32 snd, glui32 flag)$/;"	f	typeref:typename:void
glk_sound_load_hint	sndsdl.c	/^void glk_sound_load_hint(glui32 snd, glui32 flag)$/;"	f	typeref:typename:void
glk_stream_close	cgstream.c	/^void glk_stream_close(stream_t *str, stream_result_t *result)$/;"	f	typeref:typename:void
glk_stream_get_current	cgstream.c	/^stream_t *glk_stream_get_current()$/;"	f	typeref:typename:stream_t *
glk_stream_get_position	cgstream.c	/^glui32 glk_stream_get_position(stream_t *str)$/;"	f	typeref:typename:glui32
glk_stream_get_rock	cgstream.c	/^glui32 glk_stream_get_rock(stream_t *str)$/;"	f	typeref:typename:glui32
glk_stream_iterate	cgstream.c	/^stream_t *glk_stream_iterate(stream_t *str, glui32 *rock)$/;"	f	typeref:typename:stream_t *
glk_stream_open_file	cgstream.c	/^stream_t *glk_stream_open_file(frefid_t fref, glui32 fmode, glui32 rock)$/;"	f	typeref:typename:stream_t *
glk_stream_open_file_uni	cgstream.c	/^stream_t *glk_stream_open_file_uni(frefid_t fref, glui32 fmode, glui32 rock)$/;"	f	typeref:typename:stream_t *
glk_stream_open_memory	cgstream.c	/^stream_t *glk_stream_open_memory(char *buf, glui32 buflen, glui32 fmode,$/;"	f	typeref:typename:stream_t *
glk_stream_open_memory_uni	cgstream.c	/^stream_t *glk_stream_open_memory_uni(glui32 *buf, glui32 buflen, glui32 fmode,$/;"	f	typeref:typename:stream_t *
glk_stream_set_current	cgstream.c	/^void glk_stream_set_current(stream_t *str)$/;"	f	typeref:typename:void
glk_stream_set_position	cgstream.c	/^void glk_stream_set_position(stream_t *str, glsi32 pos, glui32 seekmode)$/;"	f	typeref:typename:void
glk_style_distinguish	cgstyle.c	/^glui32 glk_style_distinguish(winid_t win, glui32 styl1, glui32 styl2)$/;"	f	typeref:typename:glui32
glk_style_measure	cgstyle.c	/^glui32 glk_style_measure(winid_t win, glui32 style, glui32 hint, glui32 *result)$/;"	f	typeref:typename:glui32
glk_stylehint_clear	cgstyle.c	/^void glk_stylehint_clear(glui32 wintype, glui32 style, glui32 hint)$/;"	f	typeref:typename:void
glk_stylehint_set	cgstyle.c	/^void glk_stylehint_set(glui32 wintype, glui32 style, glui32 hint, glsi32 val)$/;"	f	typeref:typename:void
glk_tick	event.c	/^void glk_tick()$/;"	f	typeref:typename:void
glk_time_to_date_local	cgdate.c	/^void glk_time_to_date_local(glktimeval_t *time, glkdate_t *date)$/;"	f	typeref:typename:void
glk_time_to_date_utc	cgdate.c	/^void glk_time_to_date_utc(glktimeval_t *time, glkdate_t *date)$/;"	f	typeref:typename:void
glk_window_clear	window.c	/^void glk_window_clear(window_t *win)$/;"	f	typeref:typename:void
glk_window_close	window.c	/^void glk_window_close(window_t *win, stream_result_t *result)$/;"	f	typeref:typename:void
glk_window_erase_rect	imgnull.c	/^void glk_window_erase_rect(winid_t win,$/;"	f	typeref:typename:void
glk_window_erase_rect	window.c	/^void glk_window_erase_rect(winid_t win,$/;"	f	typeref:typename:void
glk_window_fill_rect	imgnull.c	/^void glk_window_fill_rect(winid_t win, glui32 color,$/;"	f	typeref:typename:void
glk_window_fill_rect	window.c	/^void glk_window_fill_rect(winid_t win, glui32 color,$/;"	f	typeref:typename:void
glk_window_flow_break	imgnull.c	/^void glk_window_flow_break(winid_t win)$/;"	f	typeref:typename:void
glk_window_flow_break	window.c	/^void glk_window_flow_break(winid_t win)$/;"	f	typeref:typename:void
glk_window_get_arrangement	window.c	/^void glk_window_get_arrangement(window_t *win, glui32 *method, glui32 *size,$/;"	f	typeref:typename:void
glk_window_get_echo_stream	window.c	/^strid_t glk_window_get_echo_stream(window_t *win)$/;"	f	typeref:typename:strid_t
glk_window_get_parent	window.c	/^winid_t glk_window_get_parent(window_t *win)$/;"	f	typeref:typename:winid_t
glk_window_get_rock	window.c	/^glui32 glk_window_get_rock(window_t *win)$/;"	f	typeref:typename:glui32
glk_window_get_root	window.c	/^winid_t glk_window_get_root()$/;"	f	typeref:typename:winid_t
glk_window_get_sibling	window.c	/^winid_t glk_window_get_sibling(window_t *win)$/;"	f	typeref:typename:winid_t
glk_window_get_size	window.c	/^void glk_window_get_size(window_t *win, glui32 *width, glui32 *height)$/;"	f	typeref:typename:void
glk_window_get_stream	window.c	/^strid_t glk_window_get_stream(window_t *win)$/;"	f	typeref:typename:strid_t
glk_window_get_type	window.c	/^glui32 glk_window_get_type(window_t *win)$/;"	f	typeref:typename:glui32
glk_window_iterate	window.c	/^winid_t glk_window_iterate(winid_t win, glui32 *rock)$/;"	f	typeref:typename:winid_t
glk_window_move_cursor	window.c	/^void glk_window_move_cursor(window_t *win, glui32 xpos, glui32 ypos)$/;"	f	typeref:typename:void
glk_window_open	window.c	/^winid_t glk_window_open(winid_t splitwin,$/;"	f	typeref:typename:winid_t
glk_window_set_arrangement	window.c	/^void glk_window_set_arrangement(window_t *win, glui32 method, glui32 size, winid_t key)$/;"	f	typeref:typename:void
glk_window_set_background_color	imgnull.c	/^void glk_window_set_background_color(winid_t win, glui32 color)$/;"	f	typeref:typename:void
glk_window_set_background_color	window.c	/^void glk_window_set_background_color(winid_t win, glui32 color)$/;"	f	typeref:typename:void
glk_window_set_echo_stream	window.c	/^void glk_window_set_echo_stream(window_t *win, stream_t *str)$/;"	f	typeref:typename:void
glkunix_arguments	glkstart.c	/^glkunix_argumentlist_t glkunix_arguments[] = {$/;"	v	typeref:typename:glkunix_argumentlist_t[]
glkunix_set_base_file	cgfref.c	/^void glkunix_set_base_file(char *filename)$/;"	f	typeref:typename:void
glkunix_startup_code	glkstart.c	/^int glkunix_startup_code(glkunix_startup_t *data)$/;"	f	typeref:typename:int
glkunix_stream_open_pathname	config.c	/^strid_t glkunix_stream_open_pathname(char *pathname, glui32 textmode, glui32 rock)$/;"	f	typeref:typename:strid_t
glyph	draw.c	/^    bitmap_t glyph[GLI_SUBPIX];$/;"	m	struct:fentry_s	typeref:typename:bitmap_t[]	file:
gmtime_r	cgdate.c	/^static struct tm * gmtime_r(const time_t *timer, struct tm *result)$/;"	f	typeref:struct:tm *	file:
grayscale	draw.c	/^#define grayscale(/;"	d	file:
h	draw.c	/^    int w, h, lsb, top, pitch;$/;"	m	struct:bitmap_s	typeref:typename:int	file:
hand_cursor	sysefl.c	/^static Ecore_X_Cursor hand_cursor;$/;"	v	typeref:typename:Ecore_X_Cursor	file:
hand_cursor	syseoi.c	/^static Ecore_X_Cursor hand_cursor;$/;"	v	typeref:typename:Ecore_X_Cursor	file:
hdc	fontwin.c	/^static HDC hdc;$/;"	v	typeref:typename:HDC	file:
hdc	syswin.c	/^static HDC hdc;$/;"	v	typeref:typename:HDC	file:
hh	draw.c	/^    UT_hash_handle hh;$/;"	m	struct:kcache_s	typeref:typename:UT_hash_handle	file:
highentries	draw.c	/^    fentry_t *highentries;$/;"	m	struct:font_s	typeref:typename:fentry_t *	file:
history_next	syseoi.c	/^static void history_next(vk_info_t *info)  { gli_input_handle_key(keycode_Down); }$/;"	f	typeref:typename:void	file:
history_prev	syseoi.c	/^static void history_prev(vk_info_t *info)  { gli_input_handle_key(keycode_Up); }$/;"	f	typeref:typename:void	file:
hwndframe	syswin.c	/^static HWND hwndview, hwndframe;$/;"	v	typeref:typename:HWND	file:
hwndview	syswin.c	/^static HWND hwndview, hwndframe;$/;"	v	typeref:typename:HWND	file:
i	syseoi.c	/^    int i;$/;"	m	struct:vk_info_t	typeref:typename:int	file:
ibeam_cursor	sysefl.c	/^static Ecore_X_Cursor ibeam_cursor;$/;"	v	typeref:typename:Ecore_X_Cursor	file:
ibeam_cursor	syseoi.c	/^static Ecore_X_Cursor ibeam_cursor;$/;"	v	typeref:typename:Ecore_X_Cursor	file:
idc_arrow	syswin.c	/^static HCURSOR idc_arrow, idc_hand, idc_ibeam;$/;"	v	typeref:typename:HCURSOR	file:
idc_hand	syswin.c	/^static HCURSOR idc_arrow, idc_hand, idc_ibeam;$/;"	v	typeref:typename:HCURSOR	file:
idc_ibeam	syswin.c	/^static HCURSOR idc_arrow, idc_hand, idc_ibeam;$/;"	v	typeref:typename:HCURSOR	file:
idle_enterer	sysefl.c	/^static Ecore_Idle_Enterer *idle_enterer = NULL;$/;"	v	typeref:typename:Ecore_Idle_Enterer *	file:
idle_enterer	syseoi.c	/^static Ecore_Idle_Enterer *idle_enterer = NULL;$/;"	v	typeref:typename:Ecore_Idle_Enterer *	file:
idle_exiter	sysefl.c	/^static Ecore_Idle_Exiter *idle_exiter = NULL;$/;"	v	typeref:typename:Ecore_Idle_Exiter *	file:
idle_exiter	syseoi.c	/^static Ecore_Idle_Exiter *idle_exiter = NULL;$/;"	v	typeref:typename:Ecore_Idle_Exiter *	file:
idle_in_cb	sysefl.c	/^static Eina_Bool idle_in_cb( void *data )$/;"	f	typeref:typename:Eina_Bool	file:
idle_in_cb	syseoi.c	/^static Eina_Bool idle_in_cb( void *data )$/;"	f	typeref:typename:Eina_Bool	file:
idle_out_cb	sysefl.c	/^static Eina_Bool idle_out_cb( void *data )$/;"	f	typeref:typename:Eina_Bool	file:
idle_out_cb	syseoi.c	/^static Eina_Bool idle_out_cb( void *data )$/;"	f	typeref:typename:Eina_Bool	file:
imcontext	sysgtk.c	/^static GtkIMContext *imcontext;$/;"	v	typeref:typename:GtkIMContext *	file:
init_fade	sndsdl.c	/^void init_fade(schanid_t chan, int volume, int duration, int notify)$/;"	f	typeref:typename:void
inited	gi_blorb.c	/^    glui32 inited; \/* holds giblorb_Inited_Magic if the map structure is$/;"	m	struct:giblorb_map_struct	typeref:typename:glui32	file:
inline	draw.c	/^#define inline	/;"	d	file:
intconstant_table	gi_dispa.c	/^static gidispatch_intconst_t intconstant_table[] = {$/;"	v	typeref:typename:gidispatch_intconst_t[]	file:
isbold	cgstyle.c	/^static int isbold(int f)$/;"	f	typeref:typename:int	file:
isitalic	cgstyle.c	/^static int isitalic(int f)$/;"	f	typeref:typename:int	file:
isprop	cgstyle.c	/^static int isprop(int f)$/;"	f	typeref:typename:int	file:
kcache_s	draw.c	/^struct kcache_s$/;"	s	file:
kcache_t	draw.c	/^typedef struct kcache_s kcache_t;$/;"	t	typeref:struct:kcache_s	file:
kerncache	draw.c	/^    kcache_t *kerncache;$/;"	m	struct:font_s	typeref:typename:kcache_t *	file:
kerned	draw.c	/^    int kerned;$/;"	m	struct:font_s	typeref:typename:int	file:
keys	syseoi.c	/^    keys_t *keys;$/;"	m	struct:vk_info_t	typeref:typename:keys_t *	file:
keys	syseoi.c	/^    keys_t *keys;$/;"	m	struct:vk_layout_t	typeref:typename:keys_t *	file:
keys	syseoi.c	/^static keys_t* keys;$/;"	v	typeref:typename:keys_t *	file:
last_key	syseoi.c	/^    char *last_key;$/;"	m	struct:vk_info_t	typeref:typename:char *	file:
last_x	winmask.c	/^static int last_x = 0;$/;"	v	typeref:typename:int	file:
last_y	winmask.c	/^static int last_y = 0;$/;"	v	typeref:typename:int	file:
layouts	syseoi.c	/^    Eina_List *layouts;$/;"	m	struct:vk_info_t	typeref:typename:Eina_List *	file:
leftquote	wintext.c	/^static bool leftquote(uint32_t c)$/;"	f	typeref:typename:bool	file:
len	gi_blorb.c	/^    glui32 len;$/;"	m	struct:giblorb_chunkdesc_struct	typeref:typename:glui32	file:
lib_inited	gi_blorb.c	/^static int lib_inited = FALSE;$/;"	v	typeref:typename:int	file:
load_image_jpeg	imgload.c	/^static void load_image_jpeg(FILE *fl, picture_t *pic)$/;"	f	typeref:typename:void	file:
load_image_png	imgload.c	/^static void load_image_png(FILE *fl, picture_t *pic)$/;"	f	typeref:typename:void	file:
load_layouts_from_path	syseoi.c	/^load_layouts_from_path(Eina_List *layout_list, const char *path1,$/;"	f	typeref:typename:Eina_List *	file:
load_sound_resource	sndsdl.c	/^static glui32 load_sound_resource(glui32 snd, long *len, char **buf)$/;"	f	typeref:typename:glui32	file:
loadfont	draw.c	/^static void loadfont(font_t *f, char *name, float size, float aspect, int style)$/;"	f	typeref:typename:void	file:
loadglyph	draw.c	/^static void loadglyph(font_t *f, glui32 cid)$/;"	f	typeref:typename:void	file:
localtime_r	cgdate.c	/^static struct tm * localtime_r(const time_t *timer, struct tm *result)$/;"	f	typeref:struct:tm *	file:
lowadvs	draw.c	/^    int lowadvs[256];$/;"	m	struct:font_s	typeref:typename:int[256]	file:
lowglyphs	draw.c	/^    bitmap_t lowglyphs[256][GLI_SUBPIX];$/;"	m	struct:font_s	typeref:typename:bitmap_t[256][]	file:
lowloaded	draw.c	/^    unsigned char lowloaded[256\/8];$/;"	m	struct:font_s	typeref:typename:unsigned char[]	file:
lsb	draw.c	/^    int w, h, lsb, top, pitch;$/;"	m	struct:bitmap_s	typeref:typename:int	file:
m28	draw.c	/^#define m28(/;"	d	file:
m56	draw.c	/^#define m56(/;"	d	file:
m85	draw.c	/^#define m85(/;"	d	file:
main	launchefl.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	launcheoi.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	launchgtk.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	launchwin.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
make_bold	draw.c	/^    int make_bold;$/;"	m	struct:font_s	typeref:typename:int	file:
make_font_filepath	fontwin.c	/^static void make_font_filepath(const char *filename, char *filepath, size_t length)$/;"	f	typeref:typename:void	file:
make_oblique	draw.c	/^    int make_oblique;$/;"	m	struct:font_s	typeref:typename:int	file:
makefont	cgstyle.c	/^static int makefont(int p, int b, int i)$/;"	f	typeref:typename:int	file:
maxval	imgscale.c	/^#define maxval /;"	d	file:
mktime	cgdate.c	/^#define mktime /;"	d	file:
monofont	fontwin.c	/^int CALLBACK monofont($/;"	f	typeref:typename:int CALLBACK
mul255	draw.c	/^#define mul255(/;"	d	file:
mul255	wingfx.c	/^#define mul255(/;"	d	file:
music_channel	sndsdl.c	/^static channel_t *music_channel;$/;"	v	typeref:typename:channel_t *	file:
music_completion_callback	sndsdl.c	/^static void music_completion_callback()$/;"	f	typeref:typename:void	file:
my_fileselector_done	sysefl.c	/^my_fileselector_done(void *data, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
my_win_del	launchefl.c	/^my_win_del(void *data, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
name	launchgtk.c	/^    const char *name;$/;"	m	struct:filter	typeref:typename:const char *	file:
name	syseoi.c	/^    const char *name;$/;"	m	struct:vk_layout_t	typeref:typename:const char *	file:
new_line	syseoi.c	/^static void new_line(vk_info_t *info)      { gli_input_handle_key(keycode_Return); }$/;"	f	typeref:typename:void	file:
newline_to_br	launchefl.c	/^newline_to_br(const char *str)$/;"	f	typeref:typename:void	file:
notify	sysgtk.c	/^static volatile int notify = 0;$/;"	v	typeref:typename:volatile int	file:
notifyid	sysgtk.c	/^static int notifyid = -1;$/;"	v	typeref:typename:int	file:
num_highentries	draw.c	/^    int num_highentries, alloced_highentries;$/;"	m	struct:font_s	typeref:typename:int	file:
numchunks	gi_blorb.c	/^    int numchunks;$/;"	m	struct:giblorb_map_struct	typeref:typename:int	file:
numresources	gi_blorb.c	/^    int numresources;$/;"	m	struct:giblorb_map_struct	typeref:typename:int	file:
onabout	syswin.c	/^void onabout(void)$/;"	f	typeref:typename:void
onbuttondown	sysefl.c	/^static void onbuttondown(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onbuttondown	syseoi.c	/^static void onbuttondown(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onbuttondown	sysgtk.c	/^static void onbuttondown(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	typeref:typename:void	file:
onbuttonup	sysefl.c	/^static void onbuttonup(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onbuttonup	syseoi.c	/^static void onbuttonup(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onbuttonup	sysgtk.c	/^static void onbuttonup(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	typeref:typename:void	file:
onconfig	syswin.c	/^void onconfig(void)$/;"	f	typeref:typename:void
onexpose	sysefl.c	/^static void onexpose(void *data, Evas_Object *o )$/;"	f	typeref:typename:void	file:
onexpose	syseoi.c	/^static void onexpose(void *data, Evas_Object *o )$/;"	f	typeref:typename:void	file:
onexpose	sysgtk.c	/^static void onexpose(GtkWidget *widget, GdkEventExpose *event, void *data)$/;"	f	typeref:typename:void	file:
onframeresize	sysefl.c	/^static void onframeresize( Ecore_Evas *frame )$/;"	f	typeref:typename:void	file:
onframeresize	syseoi.c	/^static void onframeresize( Ecore_Evas *frame )$/;"	f	typeref:typename:void	file:
onfullscreen	syswin.c	/^void onfullscreen()$/;"	f	typeref:typename:void
oninput	sysgtk.c	/^static void oninput(GtkIMContext *context, gchar *input, void *data)$/;"	f	typeref:typename:void	file:
onkeydown	sysefl.c	/^static void onkeydown(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onkeydown	sysgtk.c	/^static void onkeydown(GtkWidget *widget, GdkEventKey *event, void *data)$/;"	f	typeref:typename:void	file:
onkeyup	sysefl.c	/^static void onkeyup(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onkeyup	syseoi.c	/^static void onkeyup(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onkeyup	sysgtk.c	/^static void onkeyup(GtkWidget *widget, GdkEventKey *event, void *data)$/;"	f	typeref:typename:void	file:
onmotion	sysefl.c	/^static void onmotion(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onmotion	syseoi.c	/^static void onmotion(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onmotion	sysgtk.c	/^static void onmotion(GtkWidget *widget, GdkEventMotion *event, void *data)$/;"	f	typeref:typename:void	file:
onquit	sysefl.c	/^static void onquit( Ecore_Evas *frame )$/;"	f	typeref:typename:void	file:
onquit	syseoi.c	/^static void onquit( Ecore_Evas *frame )$/;"	f	typeref:typename:void	file:
onquit	sysgtk.c	/^static void onquit(GtkWidget *widget, void *data)$/;"	f	typeref:typename:void	file:
onresize	sysefl.c	/^void onresize(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void
onresize	syseoi.c	/^void onresize(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void
onresize	sysgtk.c	/^static void onresize(GtkWidget *widget, GtkAllocation *event, void *data)$/;"	f	typeref:typename:void	file:
onscroll	sysefl.c	/^static void onscroll(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onscroll	syseoi.c	/^static void onscroll(void *data, Evas *e, Evas_Object *obj, void *event_info)$/;"	f	typeref:typename:void	file:
onscroll	sysgtk.c	/^static void onscroll(GtkWidget *widget, GdkEventScroll *event, void *data)$/;"	f	typeref:typename:void	file:
op	syseoi.c	/^	void (*op)(vk_info_t *info);$/;"	m	struct:__anon133030920108	typeref:typename:void (*)(vk_info_t * info)	file:
operations	syseoi.c	/^_op operations[] = {$/;"	v	typeref:typename:_op[]
opname	syseoi.c	/^	char *opname;$/;"	m	struct:__anon133030920108	typeref:typename:char *	file:
output	sndsdl.c	/^static Sound_AudioInfo *output = NULL;$/;"	v	typeref:typename:Sound_AudioInfo *	file:
page_down	syseoi.c	/^static void page_down(vk_info_t *info)     { gli_input_handle_key(keycode_PageDown); }$/;"	f	typeref:typename:void	file:
page_up	syseoi.c	/^static void page_up(vk_info_t *info)       { gli_input_handle_key(keycode_PageUp); }$/;"	f	typeref:typename:void	file:
pair	draw.c	/^    glui32 pair[2];$/;"	m	struct:kcache_s	typeref:typename:glui32[2]	file:
parsecolor	config.c	/^static void parsecolor(char *str, unsigned char *rgb)$/;"	f	typeref:typename:void	file:
picstore	imgload.c	/^static piclist_t *picstore = NULL;	\/* cache all loaded pictures *\/$/;"	v	typeref:typename:piclist_t *	file:
pitch	draw.c	/^    int w, h, lsb, top, pitch;$/;"	m	struct:bitmap_s	typeref:typename:int	file:
play_compressed	sndsdl.c	/^static glui32 play_compressed(schanid_t chan, char *ext)$/;"	f	typeref:typename:glui32	file:
play_mod	sndsdl.c	/^static glui32 play_mod(schanid_t chan, long len)$/;"	f	typeref:typename:glui32	file:
play_sound	sndsdl.c	/^static glui32 play_sound(schanid_t chan)$/;"	f	typeref:typename:glui32	file:
poll_event_queue	sysefl.c	/^static Eina_Bool poll_event_queue = EINA_FALSE;$/;"	v	typeref:typename:Eina_Bool	file:
poll_event_queue	syseoi.c	/^static Eina_Bool poll_event_queue = EINA_FALSE;$/;"	v	typeref:typename:Eina_Bool	file:
propfont	fontwin.c	/^int CALLBACK propfont($/;"	f	typeref:typename:int CALLBACK
ptr	gi_blorb.c	/^    void *ptr; \/* pointer to malloc'd data, if loaded *\/$/;"	m	struct:giblorb_chunkdesc_struct	typeref:typename:void *	file:
put_picture	wintext.c	/^put_picture(window_textbuffer_t *dwin, picture_t *pic, glui32 align, glui32 linkval)$/;"	f	typeref:typename:glui32	file:
put_text	wintext.c	/^static void put_text(window_textbuffer_t *dwin, char *buf, int len, int pos, int oldlen)$/;"	f	typeref:typename:void	file:
put_text_uni	wintext.c	/^static void put_text_uni(window_textbuffer_t *dwin, glui32 *buf, int len, int pos, int oldlen)$/;"	f	typeref:typename:void	file:
quit_app	syseoi.c	/^static void quit_app(vk_info_t *info)      { exit(0); }$/;"	f	typeref:typename:void	file:
read_byte	cgunicod.c	/^static inline glui32 read_byte(FILE *fl)$/;"	f	typeref:typename:glui32	file:
readoneconfig	config.c	/^static void readoneconfig(char *fname, char *argv0, char *gamefile)$/;"	f	typeref:typename:void	file:
reflow	wintext.c	/^static void reflow(window_t *win)$/;"	f	typeref:typename:void	file:
resnum	gi_blorb.c	/^    glui32 resnum;$/;"	m	struct:giblorb_resdesc_struct	typeref:typename:glui32	file:
resources	gi_blorb.c	/^    giblorb_resdesc_t *resources; \/* list of resource descriptors *\/$/;"	m	struct:giblorb_map_struct	typeref:typename:giblorb_resdesc_t *	file:
ressorted	gi_blorb.c	/^    giblorb_resdesc_t **ressorted; \/* list of pointers to descriptors$/;"	m	struct:giblorb_map_struct	typeref:typename:giblorb_resdesc_t **	file:
rgbshift	window.c	/^static unsigned char *rgbshift (unsigned char *rgb)$/;"	f	typeref:typename:unsigned char *	file:
runblorb	launcher.c	/^int runblorb(char *path, char *game)$/;"	f	typeref:typename:int
rungame	launcher.c	/^int rungame(char *path, char *game)$/;"	f	typeref:typename:int
scrolloneline	wintext.c	/^static void scrolloneline(window_textbuffer_t *dwin, int forced)$/;"	f	typeref:typename:void	file:
scrollresize	wintext.c	/^static void scrollresize(window_textbuffer_t *dwin)$/;"	f	typeref:typename:void	file:
selection_notify_handler	sysefl.c	/^static Eina_Bool selection_notify_handler(void *data, int ev_type, void *ev)$/;"	f	typeref:typename:Eina_Bool	file:
selection_notify_handler	syseoi.c	/^static Eina_Bool selection_notify_handler(void *data, int ev_type, void *ev)$/;"	f	typeref:typename:Eina_Bool	file:
send_key	syseoi.c	/^send_key(vk_info_t *info)$/;"	f	typeref:typename:void	file:
shift	syseoi.c	/^    bool shift;$/;"	m	struct:vk_info_t	typeref:typename:bool	file:
show_help	syseoi.c	/^static void show_help(vk_info_t *info)$/;"	f	typeref:typename:void	file:
show_settings	syseoi.c	/^static void show_settings(vk_info_t *info) {}$/;"	f	typeref:typename:void	file:
sig_exit_cb	sysefl.c	/^static Eina_Bool sig_exit_cb(void *data, int ev_type, void *ev)$/;"	f	typeref:typename:Eina_Bool	file:
sig_exit_cb	syseoi.c	/^static Eina_Bool sig_exit_cb(void *data, int ev_type, void *ev)$/;"	f	typeref:typename:Eina_Bool	file:
sname	syseoi.c	/^    const char *sname;$/;"	m	struct:vk_layout_t	typeref:typename:const char *	file:
sortsplot	gi_blorb.c	/^static int sortsplot(giblorb_resdesc_t *v1, giblorb_resdesc_t *v2)$/;"	f	typeref:typename:int	file:
sound_channels	sndsdl.c	/^static channel_t *sound_channels[SDL_CHANNELS];$/;"	v	typeref:typename:channel_t * []	file:
sound_completion_callback	sndsdl.c	/^static void sound_completion_callback(int chan)$/;"	f	typeref:typename:void	file:
spd	ttsspeechd.c	/^static SPDConnection *spd;$/;"	v	typeref:typename:SPDConnection *	file:
startpos	gi_blorb.c	/^    glui32 startpos; \/* start of chunk header *\/$/;"	m	struct:giblorb_chunkdesc_struct	typeref:typename:glui32	file:
strlen_uni	cgstream.c	/^glui32 strlen_uni(glui32 *s)$/;"	f	typeref:typename:glui32
switchingfullscreen	syswin.c	/^static int switchingfullscreen = 0;$/;"	v	typeref:typename:int	file:
terp	launcher.c	/^static char terp[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
timegm	cgdate.c	/^time_t timegm(struct tm *tm)$/;"	f	typeref:typename:time_t
timeout	sysefl.c	/^static Eina_Bool timeout(void *data)$/;"	f	typeref:typename:Eina_Bool	file:
timeout	syseoi.c	/^static Eina_Bool timeout(void *data)$/;"	f	typeref:typename:Eina_Bool	file:
timeout	sysgtk.c	/^static int timeout(void *data)$/;"	f	typeref:typename:int	file:
timeouts	sysefl.c	/^static volatile int timeouts = 0;$/;"	v	typeref:typename:volatile int	file:
timeouts	syseoi.c	/^static volatile int timeouts = 0;$/;"	v	typeref:typename:volatile int	file:
timeouts	sysgtk.c	/^static volatile int timeouts = 0;$/;"	v	typeref:typename:volatile int	file:
timeouts	syswin.c	/^static volatile int timeouts = 0;$/;"	v	typeref:typename:volatile int	file:
timeproc	syswin.c	/^void CALLBACK timeproc(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)$/;"	f	typeref:typename:void CALLBACK
timer	syseoi.c	/^    Ecore_Timer *timer;$/;"	m	struct:vk_info_t	typeref:typename:Ecore_Timer *	file:
timer	syswin.c	/^static MMRESULT timer = 0;$/;"	v	typeref:typename:MMRESULT	file:
timerid	sysefl.c	/^static Ecore_Timer *timerid = NULL;$/;"	v	typeref:typename:Ecore_Timer *	file:
timerid	syseoi.c	/^static Ecore_Timer *timerid = NULL;$/;"	v	typeref:typename:Ecore_Timer *	file:
timerid	sysgtk.c	/^static int timerid = -1;$/;"	v	typeref:typename:int	file:
timerid	syswin.c	/^static int timerid = -1;$/;"	v	typeref:typename:int	file:
tmp	launchefl.c	/^char tmp[MaxBuffer];$/;"	v	typeref:typename:char[]
tmp	launcheoi.c	/^char tmp[MaxBuffer];$/;"	v	typeref:typename:char[]
tmp	launcher.c	/^static char tmp[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
tmp	launchgtk.c	/^static char tmp[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
tmp	launchwin.c	/^static char tmp[MaxBuffer];$/;"	v	typeref:typename:char[]	file:
top	draw.c	/^    int w, h, lsb, top, pitch;$/;"	m	struct:bitmap_s	typeref:typename:int	file:
touch	wingrid.c	/^static void touch(window_textgrid_t *dwin, int line)$/;"	f	typeref:typename:void	file:
touch	wintext.c	/^static void touch(window_textbuffer_t *dwin, int line)$/;"	f	typeref:typename:void	file:
touchscroll	wintext.c	/^static void touchscroll(window_textbuffer_t *dwin)$/;"	f	typeref:typename:void	file:
touni	draw.c	/^static int touni(int enc)$/;"	f	typeref:typename:int	file:
trim	config.c	/^static char* trim(char* src)$/;"	f	typeref:typename:char *	file:
txtbuf	ttsspeechd.c	/^static glui32 txtbuf[TXTSIZE + 1];$/;"	v	typeref:typename:glui32[]	file:
txtbuf	ttswin.c	/^static WCHAR txtbuf[TXTSIZE + 1];$/;"	v	typeref:typename:WCHAR[]	file:
txtlen	ttsspeechd.c	/^static size_t txtlen;$/;"	v	typeref:typename:size_t	file:
txtlen	ttswin.c	/^static size_t txtlen;$/;"	v	typeref:typename:size_t	file:
type	gi_blorb.c	/^    glui32 type;$/;"	m	struct:giblorb_chunkdesc_struct	typeref:typename:glui32	file:
unicode_to_utf8	ttsspeechd.c	/^static char *unicode_to_utf8(const glui32 *src, size_t n)$/;"	f	typeref:typename:char *	file:
unigen_case_block_0x0	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x0[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x1	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x1[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x104	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x104[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x1e	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x1e[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x1f	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x1f[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x2	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x2[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x21	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x21[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x24	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x24[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x3	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x3[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x4	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x4[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0x5	cgunigen.c	/^static gli_case_block_t unigen_case_block_0x5[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0xfb	cgunigen.c	/^static gli_case_block_t unigen_case_block_0xfb[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_case_block_0xff	cgunigen.c	/^static gli_case_block_t unigen_case_block_0xff[256] = {$/;"	v	typeref:typename:gli_case_block_t[256]	file:
unigen_decomp_block_0x0	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x0[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x1	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x1[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x1e	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x1e[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x1f	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x1f[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x2	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x2[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x22	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x22[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x2f8	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x2f8[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x2f9	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x2f9[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x2fa	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x2fa[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x3	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x3[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x30	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x30[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0x4	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0x4[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0xf9	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0xf9[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0xfa	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0xfa[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_block_0xfb	cgunigen.c	/^static gli_decomp_block_t unigen_decomp_block_0xfb[256] = {$/;"	v	typeref:typename:gli_decomp_block_t[256]	file:
unigen_decomp_data	cgunigen.c	/^static glui32 unigen_decomp_data[3247] = {$/;"	v	typeref:typename:glui32[3247]	file:
unigen_special_0x130	cgunigen.c	/^static gli_case_special_t unigen_special_0x130 = { 8, 10, 13 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x149	cgunigen.c	/^static gli_case_special_t unigen_special_0x149 = { 15, 18, 20 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1c4	cgunigen.c	/^static gli_case_special_t unigen_special_0x1c4 = { 23, 25, 27 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1c5	cgunigen.c	/^static gli_case_special_t unigen_special_0x1c5 = { 29, 31, 33 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1c6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1c6 = { 35, 37, 39 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1c7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1c7 = { 41, 43, 45 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1c8	cgunigen.c	/^static gli_case_special_t unigen_special_0x1c8 = { 47, 49, 51 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1c9	cgunigen.c	/^static gli_case_special_t unigen_special_0x1c9 = { 53, 55, 57 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ca	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ca = { 59, 61, 63 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1cb	cgunigen.c	/^static gli_case_special_t unigen_special_0x1cb = { 65, 67, 69 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1cc	cgunigen.c	/^static gli_case_special_t unigen_special_0x1cc = { 71, 73, 75 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1e96	cgunigen.c	/^static gli_case_special_t unigen_special_0x1e96 = { 131, 134, 136 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1e97	cgunigen.c	/^static gli_case_special_t unigen_special_0x1e97 = { 139, 142, 144 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1e98	cgunigen.c	/^static gli_case_special_t unigen_special_0x1e98 = { 147, 150, 152 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1e99	cgunigen.c	/^static gli_case_special_t unigen_special_0x1e99 = { 155, 158, 160 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1e9a	cgunigen.c	/^static gli_case_special_t unigen_special_0x1e9a = { 163, 166, 168 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f0	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f0 = { 77, 80, 82 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f1	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f1 = { 85, 87, 89 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f2 = { 91, 93, 95 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f3 = { 97, 99, 101 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f50	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f50 = { 171, 174, 176 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f52	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f52 = { 179, 183, 185 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f54	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f54 = { 189, 193, 195 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f56	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f56 = { 199, 203, 205 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f80	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f80 = { 209, 212, 214 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f81	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f81 = { 216, 219, 221 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f82	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f82 = { 223, 226, 228 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f83	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f83 = { 230, 233, 235 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f84	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f84 = { 237, 240, 242 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f85	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f85 = { 244, 247, 249 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f86	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f86 = { 251, 254, 256 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f87	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f87 = { 258, 261, 263 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f88	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f88 = { 265, 268, 270 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f89	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f89 = { 272, 275, 277 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f8a	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f8a = { 279, 282, 284 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f8b	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f8b = { 286, 289, 291 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f8c	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f8c = { 293, 296, 298 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f8d	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f8d = { 300, 303, 305 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f8e	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f8e = { 307, 310, 312 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f8f	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f8f = { 314, 317, 319 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f90	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f90 = { 321, 324, 326 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f91	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f91 = { 328, 331, 333 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f92	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f92 = { 335, 338, 340 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f93	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f93 = { 342, 345, 347 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f94	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f94 = { 349, 352, 354 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f95	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f95 = { 356, 359, 361 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f96	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f96 = { 363, 366, 368 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f97	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f97 = { 370, 373, 375 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f98	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f98 = { 377, 380, 382 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f99	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f99 = { 384, 387, 389 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f9a	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f9a = { 391, 394, 396 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f9b	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f9b = { 398, 401, 403 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f9c	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f9c = { 405, 408, 410 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f9d	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f9d = { 412, 415, 417 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f9e	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f9e = { 419, 422, 424 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1f9f	cgunigen.c	/^static gli_case_special_t unigen_special_0x1f9f = { 426, 429, 431 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa0	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa0 = { 433, 436, 438 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa1	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa1 = { 440, 443, 445 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa2 = { 447, 450, 452 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa3 = { 454, 457, 459 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa4	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa4 = { 461, 464, 466 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa5	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa5 = { 468, 471, 473 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa6 = { 475, 478, 480 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa7 = { 482, 485, 487 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa8	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa8 = { 489, 492, 494 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fa9	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fa9 = { 496, 499, 501 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1faa	cgunigen.c	/^static gli_case_special_t unigen_special_0x1faa = { 503, 506, 508 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fab	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fab = { 510, 513, 515 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fac	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fac = { 517, 520, 522 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fad	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fad = { 524, 527, 529 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fae	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fae = { 531, 534, 536 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1faf	cgunigen.c	/^static gli_case_special_t unigen_special_0x1faf = { 538, 541, 543 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fb2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fb2 = { 545, 548, 550 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fb3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fb3 = { 553, 556, 558 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fb4	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fb4 = { 560, 563, 565 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fb6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fb6 = { 568, 571, 573 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fb7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fb7 = { 576, 580, 582 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fbc	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fbc = { 586, 589, 591 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fc2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fc2 = { 593, 596, 598 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fc3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fc3 = { 601, 604, 606 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fc4	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fc4 = { 608, 611, 613 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fc6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fc6 = { 616, 619, 621 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fc7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fc7 = { 624, 628, 630 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fcc	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fcc = { 634, 637, 639 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fd2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fd2 = { 641, 645, 647 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fd3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fd3 = { 651, 655, 657 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fd6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fd6 = { 661, 664, 666 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fd7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fd7 = { 669, 673, 675 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fe2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fe2 = { 679, 683, 685 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fe3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fe3 = { 689, 693, 695 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fe4	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fe4 = { 699, 702, 704 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fe6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fe6 = { 707, 710, 712 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1fe7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1fe7 = { 715, 719, 721 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ff2	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ff2 = { 725, 728, 730 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ff3	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ff3 = { 733, 736, 738 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ff4	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ff4 = { 740, 743, 745 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ff6	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ff6 = { 748, 751, 753 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ff7	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ff7 = { 756, 760, 762 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x1ffc	cgunigen.c	/^static gli_case_special_t unigen_special_0x1ffc = { 766, 769, 771 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x390	cgunigen.c	/^static gli_case_special_t unigen_special_0x390 = { 103, 107, 109 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x3b0	cgunigen.c	/^static gli_case_special_t unigen_special_0x3b0 = { 113, 117, 119 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0x587	cgunigen.c	/^static gli_case_special_t unigen_special_0x587 = { 123, 126, 128 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xdf	cgunigen.c	/^static gli_case_special_t unigen_special_0xdf = { 0, 3, 5 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb00	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb00 = { 773, 776, 778 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb01	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb01 = { 781, 784, 786 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb02	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb02 = { 789, 792, 794 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb03	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb03 = { 797, 801, 803 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb04	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb04 = { 807, 811, 813 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb05	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb05 = { 817, 820, 822 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb06	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb06 = { 825, 828, 830 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb13	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb13 = { 833, 836, 838 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb14	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb14 = { 841, 844, 846 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb15	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb15 = { 849, 852, 854 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb16	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb16 = { 857, 860, 862 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_0xfb17	cgunigen.c	/^static gli_case_special_t unigen_special_0xfb17 = { 865, 868, 870 };$/;"	v	typeref:typename:gli_case_special_t	file:
unigen_special_array	cgunigen.c	/^static glui32 unigen_special_array[] = {$/;"	v	typeref:typename:glui32[]	file:
urldecode	launchwin.c	/^static int urldecode(char *decoded, unsigned int maxlen, const char *encoded)$/;"	f	typeref:typename:int	file:
usage	gi_blorb.c	/^    glui32 usage;$/;"	m	struct:giblorb_resdesc_struct	typeref:typename:glui32	file:
value	draw.c	/^    int value;$/;"	m	struct:kcache_s	typeref:typename:int	file:
viewproc	syswin.c	/^viewproc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT CALLBACK
vk_info_t	syseoi.c	/^typedef struct vk_info_t {$/;"	s	file:
vk_info_t	syseoi.c	/^} vk_info_t;$/;"	t	typeref:struct:vk_info_t	file:
vk_layout_t	syseoi.c	/^typedef struct vk_layout_t {$/;"	s	file:
vk_layout_t	syseoi.c	/^} vk_layout_t;$/;"	t	typeref:struct:vk_layout_t	file:
vkbd_init	syseoi.c	/^vk_info_t * vkbd_init()$/;"	f	typeref:typename:vk_info_t *
vkbd_timer_cb	syseoi.c	/^vkbd_timer_cb(void *param)$/;"	f	typeref:typename:Eina_Bool	file:
voice	ttswin.c	/^static ISpVoice *voice = NULL;$/;"	v	typeref:typename:ISpVoice *	file:
volume_timer_callback	sndsdl.c	/^Uint32 volume_timer_callback(Uint32 interval, void *param)$/;"	f	typeref:typename:Uint32
w	draw.c	/^    int w, h, lsb, top, pitch;$/;"	m	struct:bitmap_s	typeref:typename:int	file:
win_blank_create	winblank.c	/^window_blank_t *win_blank_create(window_t *win)$/;"	f	typeref:typename:window_blank_t *
win_blank_destroy	winblank.c	/^void win_blank_destroy(window_blank_t *dwin)$/;"	f	typeref:typename:void
win_blank_rearrange	winblank.c	/^void win_blank_rearrange(window_t *win, rect_t *box)$/;"	f	typeref:typename:void
win_blank_redraw	winblank.c	/^void win_blank_redraw(window_t *win)$/;"	f	typeref:typename:void
win_graphics_click	wingfx.c	/^void win_graphics_click(window_graphics_t *dwin, int sx, int sy)$/;"	f	typeref:typename:void
win_graphics_create	wingfx.c	/^window_graphics_t *win_graphics_create(window_t *win)$/;"	f	typeref:typename:window_graphics_t *
win_graphics_destroy	wingfx.c	/^void win_graphics_destroy(window_graphics_t *dwin)$/;"	f	typeref:typename:void
win_graphics_draw_picture	wingfx.c	/^glui32 win_graphics_draw_picture(window_graphics_t *dwin,$/;"	f	typeref:typename:glui32
win_graphics_erase_rect	wingfx.c	/^void win_graphics_erase_rect(window_graphics_t *dwin, int whole,$/;"	f	typeref:typename:void
win_graphics_fill_rect	wingfx.c	/^void win_graphics_fill_rect(window_graphics_t *dwin, glui32 color,$/;"	f	typeref:typename:void
win_graphics_get_size	wingfx.c	/^void win_graphics_get_size(window_t *win, glui32 *width, glui32 *height)$/;"	f	typeref:typename:void
win_graphics_rearrange	wingfx.c	/^void win_graphics_rearrange(window_t *win, rect_t *box)$/;"	f	typeref:typename:void
win_graphics_redraw	wingfx.c	/^void win_graphics_redraw(window_t *win)$/;"	f	typeref:typename:void
win_graphics_set_background_color	wingfx.c	/^void win_graphics_set_background_color(window_graphics_t *dwin, glui32 color)$/;"	f	typeref:typename:void
win_graphics_touch	wingfx.c	/^static void win_graphics_touch(window_graphics_t *dest)$/;"	f	typeref:typename:void	file:
win_pair_click	winpair.c	/^void win_pair_click(window_pair_t *dwin, int x, int y)$/;"	f	typeref:typename:void
win_pair_create	winpair.c	/^window_pair_t *win_pair_create(window_t *win, glui32 method, window_t *key, glui32 size)$/;"	f	typeref:typename:window_pair_t *
win_pair_destroy	winpair.c	/^void win_pair_destroy(window_pair_t *dwin)$/;"	f	typeref:typename:void
win_pair_rearrange	winpair.c	/^void win_pair_rearrange(window_t *win, rect_t *box)$/;"	f	typeref:typename:void
win_pair_redraw	winpair.c	/^void win_pair_redraw(window_t *win)$/;"	f	typeref:typename:void
win_textbuffer_cancel_line	wintext.c	/^void win_textbuffer_cancel_line(window_t *win, event_t *ev)$/;"	f	typeref:typename:void
win_textbuffer_clear	wintext.c	/^void win_textbuffer_clear(window_t *win)$/;"	f	typeref:typename:void
win_textbuffer_click	wintext.c	/^void win_textbuffer_click(window_textbuffer_t *dwin, int sx, int sy)$/;"	f	typeref:typename:void
win_textbuffer_create	wintext.c	/^window_textbuffer_t *win_textbuffer_create(window_t *win)$/;"	f	typeref:typename:window_textbuffer_t *
win_textbuffer_destroy	wintext.c	/^void win_textbuffer_destroy(window_textbuffer_t *dwin)$/;"	f	typeref:typename:void
win_textbuffer_draw_picture	wintext.c	/^glui32 win_textbuffer_draw_picture(window_textbuffer_t *dwin,$/;"	f	typeref:typename:glui32
win_textbuffer_flow_break	wintext.c	/^glui32 win_textbuffer_flow_break(window_textbuffer_t *dwin)$/;"	f	typeref:typename:glui32
win_textbuffer_init_line	wintext.c	/^void win_textbuffer_init_line(window_t *win, char *buf, int maxlen, int initlen)$/;"	f	typeref:typename:void
win_textbuffer_init_line_uni	wintext.c	/^void win_textbuffer_init_line_uni(window_t *win, glui32 *buf, int maxlen, int initlen)$/;"	f	typeref:typename:void
win_textbuffer_putchar_uni	wintext.c	/^void win_textbuffer_putchar_uni(window_t *win, glui32 ch)$/;"	f	typeref:typename:void
win_textbuffer_rearrange	wintext.c	/^void win_textbuffer_rearrange(window_t *win, rect_t *box)$/;"	f	typeref:typename:void
win_textbuffer_redraw	wintext.c	/^void win_textbuffer_redraw(window_t *win)$/;"	f	typeref:typename:void
win_textbuffer_unputchar_uni	wintext.c	/^int win_textbuffer_unputchar_uni(window_t *win, glui32 ch)$/;"	f	typeref:typename:int
win_textgrid_cancel_line	wingrid.c	/^void win_textgrid_cancel_line(window_t *win, event_t *ev)$/;"	f	typeref:typename:void
win_textgrid_clear	wingrid.c	/^void win_textgrid_clear(window_t *win)$/;"	f	typeref:typename:void
win_textgrid_click	wingrid.c	/^void win_textgrid_click(window_textgrid_t *dwin, int sx, int sy)$/;"	f	typeref:typename:void
win_textgrid_create	wingrid.c	/^window_textgrid_t *win_textgrid_create(window_t *win)$/;"	f	typeref:typename:window_textgrid_t *
win_textgrid_destroy	wingrid.c	/^void win_textgrid_destroy(window_textgrid_t *dwin)$/;"	f	typeref:typename:void
win_textgrid_init_line	wingrid.c	/^void win_textgrid_init_line(window_t *win, char *buf, int maxlen, int initlen)$/;"	f	typeref:typename:void
win_textgrid_init_line_uni	wingrid.c	/^void win_textgrid_init_line_uni(window_t *win, glui32 *buf, int maxlen, int initlen)$/;"	f	typeref:typename:void
win_textgrid_move_cursor	wingrid.c	/^void win_textgrid_move_cursor(window_t *win, int xpos, int ypos)$/;"	f	typeref:typename:void
win_textgrid_putchar_uni	wingrid.c	/^void win_textgrid_putchar_uni(window_t *win, glui32 ch)$/;"	f	typeref:typename:void
win_textgrid_rearrange	wingrid.c	/^void win_textgrid_rearrange(window_t *win, rect_t *box)$/;"	f	typeref:typename:void
win_textgrid_redraw	wingrid.c	/^void win_textgrid_redraw(window_t *win)$/;"	f	typeref:typename:void
win_textgrid_unputchar_uni	wingrid.c	/^int win_textgrid_unputchar_uni(window_t *win, glui32 ch)$/;"	f	typeref:typename:int
winabort	sysefl.c	/^void winabort(const char *fmt, ...)$/;"	f	typeref:typename:void
winabort	syseoi.c	/^void winabort(const char *fmt, ...)$/;"	f	typeref:typename:void
winabort	sysgtk.c	/^void winabort(const char *fmt, ...)$/;"	f	typeref:typename:void
winabort	syswin.c	/^void winabort(const char *fmt, ...)$/;"	f	typeref:typename:void
winargs	launchefl.c	/^int winargs(int argc, char **argv, char *buffer)$/;"	f	typeref:typename:int
winargs	launcheoi.c	/^int winargs(int argc, char **argv, char *buffer)$/;"	f	typeref:typename:int
winargs	launchgtk.c	/^int winargs(int argc, char **argv, char *buffer)$/;"	f	typeref:typename:int
winargs	launchwin.c	/^int winargs(int argc, char **argv, char *buffer)$/;"	f	typeref:typename:int
winblit	syswin.c	/^static void winblit(RECT r)$/;"	f	typeref:typename:void	file:
winbrowsefile	launchgtk.c	/^static void winbrowsefile(char *buffer, size_t n)$/;"	f	typeref:typename:void	file:
winbrowsefile	launchwin.c	/^void winbrowsefile(char *buffer)$/;"	f	typeref:typename:void
winchoosefile	sysefl.c	/^void winchoosefile(char *prompt, char *buf, int len, int filter, Eina_Bool is_save)$/;"	f	typeref:typename:void	file:
winchoosefile	syseoi.c	/^void winchoosefile(char *prompt, char *buf, int len, int filter, Eina_Bool is_save)$/;"	f	typeref:typename:void	file:
winchoosefile	sysgtk.c	/^static void winchoosefile(char *prompt, char *buf, int len, int filter, GtkFileChooserAction act/;"	f	typeref:typename:void	file:
winclipreceive	sysefl.c	/^void winclipreceive(int source)$/;"	f	typeref:typename:void
winclipreceive	syseoi.c	/^void winclipreceive(int source)$/;"	f	typeref:typename:void
winclipreceive	sysgtk.c	/^static void winclipreceive(int source)$/;"	f	typeref:typename:void	file:
winclipreceive	syswin.c	/^void winclipreceive(void)$/;"	f	typeref:typename:void
winclipsend	sysefl.c	/^void winclipsend(int source)$/;"	f	typeref:typename:void
winclipsend	syseoi.c	/^void winclipsend(int source)$/;"	f	typeref:typename:void
winclipsend	sysgtk.c	/^static void winclipsend(int source)$/;"	f	typeref:typename:void	file:
winclipsend	syswin.c	/^void winclipsend(void)$/;"	f	typeref:typename:void
winclipstore	sysefl.c	/^void winclipstore(glui32 *text, int len)$/;"	f	typeref:typename:void
winclipstore	syseoi.c	/^void winclipstore(glui32 *text, int len)$/;"	f	typeref:typename:void
winclipstore	sysgtk.c	/^void winclipstore(glui32 *text, int len)$/;"	f	typeref:typename:void
winclipstore	syswin.c	/^void winclipstore(glui32 *text, int len)$/;"	f	typeref:typename:void
wincounter	sysefl.c	/^void wincounter(glktimeval_t *time)$/;"	f	typeref:typename:void
wincounter	syseoi.c	/^void wincounter(glktimeval_t *time)$/;"	f	typeref:typename:void
wincounter	sysgtk.c	/^void wincounter(glktimeval_t *time)$/;"	f	typeref:typename:void
wincounter	syswin.c	/^void wincounter(glktimeval_t *time)$/;"	f	typeref:typename:void
winexec	launchefl.c	/^int winexec(const char *cmd, char **args)$/;"	f	typeref:typename:int
winexec	launcheoi.c	/^int winexec(const char *cmd, char **args)$/;"	f	typeref:typename:int
winexec	launchgtk.c	/^int winexec(const char *cmd, char **args)$/;"	f	typeref:typename:int
winexec	launchwin.c	/^int winexec(const char *cmd, char **args)$/;"	f	typeref:typename:int
winexit	sysefl.c	/^void winexit(void)$/;"	f	typeref:typename:void
winexit	syseoi.c	/^void winexit(void)$/;"	f	typeref:typename:void
winexit	sysgtk.c	/^void winexit(void)$/;"	f	typeref:typename:void
winexit	syswin.c	/^void winexit(void)$/;"	f	typeref:typename:void
winfilterfiles	launchgtk.c	/^static void winfilterfiles(GtkFileChooser *dialog)$/;"	f	typeref:typename:void	file:
winfilternames	sysefl.c	/^static char *winfilternames[] =$/;"	v	typeref:typename:char * []	file:
winfilternames	sysgtk.c	/^static char *winfilternames[] =$/;"	v	typeref:typename:char * []	file:
winfilterpatterns	sysefl.c	/^static char *winfilterpatterns[] =$/;"	v	typeref:typename:char * []	file:
winfilterpatterns	sysgtk.c	/^static char *winfilterpatterns[] =$/;"	v	typeref:typename:char * []	file:
winfilters	syswin.c	/^static char *winfilters[] =$/;"	v	typeref:typename:char * []	file:
wininit	sysefl.c	/^void wininit(int *argc, char **argv)$/;"	f	typeref:typename:void
wininit	syseoi.c	/^void wininit(int *argc, char **argv)$/;"	f	typeref:typename:void
wininit	sysgtk.c	/^void wininit(int *argc, char **argv)$/;"	f	typeref:typename:void
wininit	syswin.c	/^void wininit(int *argc, char **argv)$/;"	f	typeref:typename:void
winmsg	launchefl.c	/^void winmsg(const char * msg)$/;"	f	typeref:typename:void
winmsg	launcheoi.c	/^void winmsg(const char * msg)$/;"	f	typeref:typename:void
winmsg	launchgtk.c	/^void winmsg(const char * msg)$/;"	f	typeref:typename:void
winmsg	launchwin.c	/^void winmsg(const char *msg)$/;"	f	typeref:typename:void
winopen	sysefl.c	/^void winopen(void)$/;"	f	typeref:typename:void
winopen	syseoi.c	/^void winopen(void)$/;"	f	typeref:typename:void
winopen	sysgtk.c	/^void winopen(void)$/;"	f	typeref:typename:void
winopen	syswin.c	/^void winopen()$/;"	f	typeref:typename:void
winopenfile	sysefl.c	/^void winopenfile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winopenfile	syseoi.c	/^void winopenfile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winopenfile	sysgtk.c	/^void winopenfile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winopenfile	syswin.c	/^void winopenfile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winpath	launchefl.c	/^void winpath(char *buffer)$/;"	f	typeref:typename:void
winpath	launcheoi.c	/^void winpath(char *buffer)$/;"	f	typeref:typename:void
winpath	launchgtk.c	/^void winpath(char *buffer)$/;"	f	typeref:typename:void
winpath	launchwin.c	/^void winpath(char *buffer)$/;"	f	typeref:typename:void
winrepaint	sysefl.c	/^void winrepaint(int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
winrepaint	syseoi.c	/^void winrepaint(int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
winrepaint	sysgtk.c	/^void winrepaint(int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
winrepaint	syswin.c	/^void winrepaint(int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
winresize	syswin.c	/^void winresize(void)$/;"	f	typeref:typename:void
winsavefile	sysefl.c	/^void winsavefile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winsavefile	syseoi.c	/^void winsavefile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winsavefile	sysgtk.c	/^void winsavefile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winsavefile	syswin.c	/^void winsavefile(char *prompt, char *buf, int len, int filter)$/;"	f	typeref:typename:void
winstart	launchgtk.c	/^static void winstart(void)$/;"	f	typeref:typename:void	file:
winstart	launchwin.c	/^void winstart(void)$/;"	f	typeref:typename:void
winterp	launchefl.c	/^int winterp(char *path, char *exe, char *flags, char *game)$/;"	f	typeref:typename:int
winterp	launcheoi.c	/^int winterp(char *path, char *exe, char *flags, char *game)$/;"	f	typeref:typename:int
winterp	launchgtk.c	/^int winterp(char *path, char *exe, char *flags, char *game)$/;"	f	typeref:typename:int
winterp	launchwin.c	/^int winterp(char *path, char *exe, char *flags, char *game)$/;"	f	typeref:typename:int
wintitle	sysefl.c	/^void wintitle(void)$/;"	f	typeref:typename:void
wintitle	syseoi.c	/^void wintitle(void)$/;"	f	typeref:typename:void
wintitle	sysgtk.c	/^void wintitle(void)$/;"	f	typeref:typename:void
wintitle	syswin.c	/^void wintitle(void)$/;"	f	typeref:typename:void
xwin	sysefl.c	/^static Ecore_X_Window xwin;$/;"	v	typeref:typename:Ecore_X_Window	file:
xwin	syseoi.c	/^static Ecore_X_Window xwin;$/;"	v	typeref:typename:Ecore_X_Window	file:
zcolor_Background	window.c	/^static unsigned char zcolor_Background[3] = { 0, 0, 0 };$/;"	v	typeref:typename:unsigned char[3]	file:
zcolor_Bright	window.c	/^static unsigned char zcolor_Bright[3] = { 0, 0, 0 };$/;"	v	typeref:typename:unsigned char[3]	file:
zcolor_Foreground	window.c	/^static unsigned char zcolor_Foreground[3] = { 0, 0, 0 };$/;"	v	typeref:typename:unsigned char[3]	file:
zcolor_LightGrey	window.c	/^static unsigned char zcolor_LightGrey[3] = { 181, 181, 181 };$/;"	v	typeref:typename:unsigned char[3]	file:
zcolor_bg	window.c	/^static unsigned int zcolor_bg = 0;$/;"	v	typeref:typename:unsigned int	file:
zcolor_fg	window.c	/^static unsigned int zcolor_fg = 0;$/;"	v	typeref:typename:unsigned int	file:
